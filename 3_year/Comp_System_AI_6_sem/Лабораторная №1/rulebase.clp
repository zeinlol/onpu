         CLIPS (6.31 6/12/19)
CLIPS> (deffacts rule_facts (days 4)(works 20%)(temp 30)(rain "light"))
CLIPS> (reset)
CLIPS> (defrule R1 (days 3)(works 0%) => (assert (free_time "few")))
CLIPS> (defrule R2 (days 3)(works 20%) => (assert (free_time "few")))
CLIPS> (defrule R3 (days 3)(works 50%) => (assert (free_time "absent")))
CLIPS> (defrule R4 (days 4)(works 0%) => (assert (free_time "a lot")))
CLIPS> (defrule R5 (days 4)(works 20%) => (assert (free_time "few")))
CLIPS> (defrule R6 (days 4)(works 50%) => (assert (free_time "absent")))
CLIPS> (defrule R7 (days 5)(works 0%) => (assert (free_time "a lot")))
CLIPS> (defrule R8 (days 5)(works 20%) => (assert (free_time "a lot")))
CLIPS> (defrule R9 (days 5)(works 50%) => (assert (free_time "few")))
CLIPS> (defrule R10 (temp 5)(rain "light") => (assert (weather "good")))
CLIPS> (defrule R11 (temp 5)(rain "normal") => (assert (weather "bad")))
CLIPS> (defrule R12 (temp 5)(rain "heavy") => (assert (weather "bad")))
CLIPS> (defrule R13 (temp 15)(rain "light") => (assert (weather "excellent")))
CLIPS> (defrule R14 (temp 15)(rain "normal") => (assert (weather "good")))
CLIPS> (defrule R15 (temp 15)(rain "heavy") => (assert (weather "bad")))
CLIPS> (defrule R16 (temp 30)(rain "light") => (assert (weather "excellent")))
CLIPS> (defrule R17 (temp 30)(rain "normal") => (assert (weather "excellent")))
CLIPS> (defrule R18 (temp 30)(rain "heavy") => (assert (weather "good")))
CLIPS> (defrule R19 (free_time "absent")(weather "bad") => (assert (act "to study")))
CLIPS> (defrule R20 (free_time "absent")(weather "good") => (assert (act "to study")))
CLIPS> (defrule R21 (free_time "absent")(weather "excellent") => (assert (act "take a walk")))
CLIPS> (defrule R22 (free_time "few")(weather "bad") => (assert (act "to study")))
CLIPS> (defrule R23 (free_time "few")(weather "good") => (assert (act "get busy a hobby")))
CLIPS> (defrule R24 (free_time "few")(weather "excellent") => (assert (act "take a walk")))
CLIPS> (defrule R25 (free_time "a lot")(weather "bad") => (assert (act "get busy a hobby")))
CLIPS> (defrule R26 (free_time "a lot")(weather "good") => (assert (act "take a walk")))
CLIPS> (defrule R27 (free_time "a lot")(weather "excellent") => (assert (act "take a walk")))