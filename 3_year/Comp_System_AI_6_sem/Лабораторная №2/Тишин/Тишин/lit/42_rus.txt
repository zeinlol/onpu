Адаптивные Информационные технологии для управления жизненным циклом обслуживания
Джерри Rolia, Гийом Belrose, Клаус марка, Найджел Эдвардс, Даниэль Gmach, Свен Graupner,
Йоханнес Kirschnick, Брайан Стивенсон, Paul Vickers, Лоуренс Уилкок
HP Лаборатории
HPL-2008-80
Ключевое слово (а):
Сравнительный анализ, бизнес-приложений, производительность размеров, оптимизация, программное обеспечение как услуга.
Аннотация:
Переход от корпоративных вычислений для сервис-ориентированных и облачных вычислений происходит очень
быстро. Поскольку спрос на услуги более высокого значения увеличивает там будет большая необходимость в обслуживании
настройки, автоматизации для предоставления и управления услугами, а также возможность
Предлагаем услуги, которые удовлетворяют нефункциональные требования. Эта статья описывает наше исследование
Модель-ориентированный подход для упаковки высокого корпоративного программного обеспечения значения для использования в качестве сервиса и на
управление жизненным циклом сервисов обслуживания случаях в общей виртуальные пулы ресурсов. Наши
Подход снасти нефункциональные такие вопросы, как доступность, безопасность, масштабируемость, гибкость и
производительность. Они важны для высокой стоимости ИТ-услуг. Исследование с участием
SAP система демонстрирует наш прогресс. Наши результаты показывают, что модель-ориентированный подход может быть
привлекательным для поставщиков программного обеспечения, которые направлены на поддержку большого количества экземпляра службы.
Внешний Ваши Дата: 21 июля 2008 г. [Текст] Утверждено для внешней публикации
Внутренние Ваши Дата: 21 июля 2008 года [Полный текст]
© Copyright 2008 Hewlett-Packard Development Company, LP
1
 
Аннотация переход от корпоративных вычислений для сервис-ориентированных и облачных вычислений происходит очень быстро.
Поскольку спрос на услуги более высокого значения увеличивает там будет большая потребность в службу настройки, автоматизации
предоставление и управление услугами, и возможность предлагать услуги, которые удовлетворяют нефункциональные требования.
Эта статья описывает наше исследование на модели-ориентированный подход к упаковке высококачественного программного стоимости предприятия для использования в качестве
услуг и по управлению жизненным циклом сервисов обслуживания случаях в общей виртуальные пулы ресурсов. Наш подход
снасти нефункциональные такие вопросы, как доступность, безопасность, масштабируемость, гибкость и производительность. Это важно
за высокой стоимости ИТ-услуг. Исследование с участием системы SAP демонстрирует наш прогресс. Наши результаты показывают,
, что модель-ориентированный подход может быть привлекательным для поставщиков программного обеспечения, которые направлены на поддержку большого числа услуг
случаев
Индекс условия, программное обеспечение как услуга, Enterprise Computing, Управление информационных технологий.
I. ВВЕДЕНИЕ
Предполагается, что к 2015 году более 75% информационных технологий (ИТ) инфраструктуры
быть приобретен в качестве службы от внешних и внутренних хостинг-провайдеры [1]. Есть много
Причины этой тенденции. Те предприятия, которые нужны ИТ-инфраструктуры можете приобрести его в качестве службы
быстрее, с меньшим риском развертывания, снижение капитальных затрат и сокращение потребности в определенных ИТ
навыки. Поставщики услуг могут предлагать услуги с большей зрелости процессов и повышения эффективности
в то время как амортизировать инфраструктуры и затрат на рабочую силу по многим предприятиям, которые они обслуживают.
Есть много видов ИТ-инфраструктуры предлагается в качестве услуги. Серверы, системы хранения и сетевое
могут быть предложены внутренней корпоративной ИТ-провайдеров или провайдеров Интернет-услуг [2]. E-mail, слово
обработки, и другие простые бизнес-приложений в настоящее время предлагают многие провайдеры [3]. Больше
Комплекс бизнес-приложений, реализации бизнес-процессов, таких как взаимоотношения с клиентами
управления, порядок и обработки счетов-фактур и управления цепочками поставок также предлагается в качестве
Служба [4] [5] [6]. Услуга может быть предложена в нескольких направлениях. Это может быть портал, который доступен через
Веб-браузеры, конечной точки веб-службы или комбинации этих двух.
Наше внимание сосредоточено на услуги высокого значения, реализации бизнес-процессов для малого бизнеса
до корпоративных клиентов класса. Эти клиенты могут иметь тысячи и более человек
и тысячами или миллионами пользователей или устройств с поддержкой Web, которые взаимодействуют с их обслуживанием. Наши
Дизайн точкой проекта является обеспечение экономически эффективного размещения одного миллиона высокой стоимости услуг
экземпляров. Это ведет наша задача сделать управление жизненным циклом сервисов, как клиент приводом и
автоматизированы насколько это возможно.
Есть несколько актеров, которые участвуют в SaaS. Инфраструктура провайдеры предоставляют
Адаптивная информационных технологий для обслуживания
Управление жизненным циклом
JERRY ROLIA, Гийом Belrose, Клаус BRAND, Найджел Эдвардс, Даниэль GMACH, SVEN
GRAUPNER, Йоханнес Kirschnick, Брайан Стивенсон, Пол VICKERS, Лоуренс
Уилкок
2
инфраструктуры, физических и виртуальных, для работы экземпляров службы. Поставщики программного обеспечения
предоставлять программное обеспечение, которое поставляется как услуга. Разработчики программного обеспечения создают программное обеспечение. Клиенты
Контракт с поставщиком инфраструктуры и программного обеспечения, чтобы потреблять услугу. Обслуживание
реализует бизнес-процессов для клиентов. Экземпляр службы предоставляет услуги
клиентов. Клиент может иметь разработку, тестирование и производство экземпляров службы.
пользователей услуг являются сотрудники, ИТ-систем, веб-устройств, или бизнес-партнеров
клиентов. В некоторых случаях поставщик инфраструктурных решений, программного обеспечения и поставщик программного обеспечения являются
одно целое.
Эта статья описывает наше исследование на модели-ориентированный подход для упаковки высокого значения
корпоративного программного обеспечения как услуги и по управлению жизненным циклом сервисов обслуживания в случаях
общие виртуальные пулы ресурсов. Мы использовали случаев использования SAP [6] для разработки наших идей и
В качестве примеров представлены в этой статье. SAP является богатым источником высокой стоимости предприятия
услуг и создает много проблем, которые необходимо решать поставщиками программного обеспечения. Наши результаты
Показано, что модель-ориентированный подход может быть привлекательным для поставщиков программного обеспечения, которые направлены на поддержку
Большое количество экземпляров службы.
Оставшаяся часть работы организована следующим образом. Раздел II описывает соответствующую работу. Раздел
III представляет нашу модель-ориентированный подход для управления жизненным циклом сервисов. Раздел IV объясняет
научно-исследовательские проекты, которые способствуют подход. Он описывает наше использование моделей, автоматизация
службы конфигурации экземпляра и управления, а также поддержка нефункциональные требования.
Раздел V описывает нашу текущей реализации с системой SAP в качестве примера. Раздел VI
предлагает Резюме и заключительные замечания и план нашей будущей работы.
II. СВЯЗАННЫЕ С РАБОТЫ
Модель управляемой методы были, по мнению многих исследователей и эксплуатируемых в реальном мире
средах [4] [6]. В общем, методы сбора информации в модели, которые могут быть использованы для
автоматически генерировать код, сведения о конфигурации или изменения конфигурации.
Цель моделями подхода является повышение автоматизации и уменьшить человеческие усилия и
Расходы, необходимые для поддержки ИТ-систем. Системы может иметь множество аспектов конкретной точки зрения, например,
функциональности, безопасности, производительности, соответствия, каждый с моделью. Понятие точки зрения
была введена в модель тонны Ссылка для распределенных вычислений [7]. Хотя мы используем
различных точек зрения, концепция аналогична и принцип разделения проблем то же самое.
Наша цель заключается в разработке и интеграции моделей, которые отражают различные точки зрения для поддержки жизненного цикла
управление экземплярами служб.
Есть несколько различных парадигм как экземпляры службы может быть вынесено в общей
пулов ресурсов. Они могут быть классифицированы как мульти-аренды, изолированных аренды, и гибридные аренды
[8] [9]. Многопользовательской проводит много клиентов с одного экземпляра программного обеспечения службы. Isolatedtenancy
создается отдельный экземпляр службы для каждого клиента. Гибрид может поделиться некоторой части
Экземпляр службы, такие как базы данных во многих клиентов, сохраняя при изолированном
серверы приложений. Многопользовательской системы может уменьшить содержание и задачи управления
для поставщиков, но это может быть труднее обеспечить клиенту конкретные уровни обслуживания. Isolatedtenancy
системы обеспечивают максимальную гибкость и производительность наибольшую безопасность, но представить
более сложные задачи технического обслуживания. Гибридные аренды подходы имеют черты обоих подходов. Мы
сосредоточиться на изолированные и гибридные подходы для оказания услуг экземпляры в общей виртуализированной
пулов ресурсов. Guo и др.. Аль рассматривать вопросы поддержки настройки и развертывания Multitenancy
экземпляров службы [10].
3
Оказание услуг экземпляры в общей виртуальные пулы ресурсов представляет конфигурацию,
развертывание и управление вызовами. Zhang и соавт. [11] представляют политике ориентированный подход для
указанием вариантов конфигурации услуг. Ramshaw и соавт. [12] изучить возможность использования
инструменты удовлетворения ограничений для указания альтернативных конфигураций системы. Наш подход связан
этих моделей, но ссылки конфигурации с другими моделями для развертывания во время выполнения и изменения
управления. Промышленные подходы предлагают средства визуальной разработки программного обеспечения и инфраструктуры
поставщиков, которые помогают вручную указать стека программного обеспечения и моделей инфраструктуры топологии
Услуги и сервис случаев [13] [14]. С нашей целью поддержки один миллион высокой стоимости услуг
случаях, мы считаем, что клиенты указать их нефункциональные требования, но это
Ответственность нашей рамках оказывать соответствующее программное обеспечение и инфраструктуру
конфигурации для экземпляра службы.
Облачные вычисления предлагает интегрированное внедрение программного обеспечения, хостов, хранилищ и сетей
к общей виртуальные пулы ресурсов. Она изучается несколькими исследовательскими группами [15] [18] [19].
Промышленные подходов имеются в наличии [2] [13] [16]. Наша цель заключается в обеспечении развертывания и выполнения
управление экземплярами служб на нескольких облачных вычислений целевых обеспечивая тем самым более
гибкость для заказчиков. Для облегчения наших исследований мы разработали нашу собственную общей виртуализированной
Пул ресурсов на основе Xen [20] и соответствующий пул ресурсов Management Service.
Автономных вычислений направлена ??на сокращение человеческих усилий, необходимых для текущей управление
экземпляров службы [21]. Это включает в себя ежедневные, еженедельные и ежемесячные таких задач, как обеспечение базы данных
Таблицы соответствующего размера, переворачивание соответствующие лог-файлы, а также выполнение тесты на совместимость.
Наш подход объединяет такие во время управления на службу в течение жизненного цикла экземпляров службы.
Этот аспект управления имеет важное значение для достижения нашей цели за проведение очень большого числа
экземпляров службы.
Там было последние работы по автоматизации управления эффективностью виртуализированных общие
пулы ресурсов [22] [23] [24] [25] [26] [27] [28] [25] [29] [30]. Методы рассматриваются такие вопросы, как
мощностью планирование и обеспечение производительности, энергопотребления и экономического основе качества обслуживания.
Наш подход заключается в захвате достаточной информации в моделях в дополнение к таким методам и
взаимодействовать с ними в службу поддержки управления жизненным циклом. Наши последние работы по пулу ресурсов
Управление помогает нам глубже понять проблемы, которые возникают [27] [29] [30].
Наконец, модель подхода мы представляем обеспечивает высокий уровень автоматизации службы
Управление жизненным циклом, но это не платформа автоматизации сама по себе. Скорее всего, это сервис, который является
создаются и управляются, как правило, использовать одну или несколько платформ автоматизации. Мы используем
SmartFrog [17] для автоматизации развертывания программного и аппаратного обеспечения в нашей прототипа ресурса
бассейн, но мы могли бы использовать другие платформы автоматизации вместо или в дополнение.
III. Управление жизненным циклом ПО экземпляров службы
В этом разделе представлены управления жизненным циклом сервисов основа для экземпляров служб. Обслуживание
Управление жизненным циклом регулирует создание и управление экземплярами служб для клиентов.
Основы использует модель-ориентированный подход с информацией о экземпляра службы
захваченных в ряд государств модель и разъемные дополнительных моделей, которые описывают программного обеспечения и
Информационная инфраструктура провайдера. Мы называем нашу модель-ориентированный подход как модель
Информационный поток (MIF) [31], потому что его внимание на сбор и повторное использование информации о модели к
автоматизировать управление жизненным циклом услуг.
4
MIF ссылки три точки зрения.
1.The конфигурации службы функциональные возможности, предлагаемые поставщиком программного обеспечения.
2.The конфигурации программных компонентов, которые реализуют экземпляр службы.
3.The конфигурации инфраструктуру, виртуальные и физические, на котором размещены экземпляры службы.
MIF позволяет изменение в одной точке зрения, связаны с изменениями в других точек зрения. Для
Например он связывает изменения в отдельных функциональных услуг или нефункциональные требования к
необходимые изменения в конфигурацию приложений и инфраструктуры топологии. С другой стороны, модель
Информация также может быть использован для определения последствий изменения инфраструктуры на
Поведение экземпляра службы.
Принцип модель нашего подхода является модель обслуживания Lifecycle. Обслуживание Lifecycle
Модель инкапсулирует экземпляр службы конкретной информационной модели и развивается через штаты
показано на рисунке 1. Жизненный цикл начинается с левой стороны с каталогом услуг, которые являются
поддерживается нашим подходом и заканчивается справа с развернута и работает система. Циклы могут
встречается на каждом шагу, но не показано на рисунке для простоты. Государства управляют
Конфигурация службы, инфраструктура выбор, ресурс приобретения, развертывания и выполнения
работа экземпляр службы. В следующих подразделах описываются Каталог услуг и
состояний модели Lifecycle Service.
А. Каталог услуг
Каталог услуг определяет услуги, которые могут предоставляться с использованием нашего подхода. Учитывая наши
контексте поддержки высококачественных услуг предприятия значение для поставщиков программного обеспечения, таких как SAP, каждая
Запись в каталоге описаны службы, которая представляет собой совокупность процессов, связанных с бизнесом. Примеры
Процессы бизнеса включают продажи и доставки, а также управления цепочками поставок. Описание
включает в себя текстовые описания и визуальных обозначений, таких как BPMN [32], чтобы проиллюстрировать бизнеса
процессов. Кроме того, в каталоге запись указывает набора инструментов, который поддерживает создание и
управление соответствующему экземпляру службы.
После того, как услуга была выбрана заказчиком мы используем запись в каталоге для создания
Обслуживание жизненного цикла модели для экземпляра службы. Модель жизненного цикла обслуживания может быть в одном из шести
состояниях: как правило, через развернуты. Обслуживание модель жизненного цикла переходов между состояниями, как
набора инструментов работает на экземпляр службы. В следующих подразделах описываются моделью
общие несвязанных связаны
пользовательские заземленной развернуто
Общие
Виртуализированные
Ресурс
Бассейн
Общие
Виртуализированные
Ресурс
Бассейн
Каталог услуг
Обслуживание
конфигурация
Инфраструктура
выбор
Приобретать
Развертывание и
Операция
Рисунок 1: Штатах Модель службы жизненным циклом
5
информация, которая отражена в каждом государстве и привести примеры инструментов, которые используются для поддержки
перехода между состояниями.
В. Общие
Это начальное состояние модели Lifecycle Service. После службы данных жизненного цикла модели
Структура готовится она в состоянии перехода к пользовательской государства.
C. пользовательских
Пользовательское состояние дополняет модель жизненного цикла обслуживания с функциональной и нефункциональные
требования. Эти требования собранные одного или нескольких инструментов в наборе.
Инструмент функциональности конфигурации услуга позволяет клиенту указать подмножество
службы бизнес-процессов, которые должны быть использованы. Например, продажи и поставки могут быть необходимы
но не управления цепочками поставок. Кроме того, каждый бизнес-процесс может иметь несколько бизнес
Процесс варианты, т. е. логики, которая обрабатывает различные обстоятельства дела. Желаемый набор
Бизнес-процесс вариантов для каждого выбранного процесса также должны быть указаны. Например, если
бизнеса заказчика не принимаются возврат товара, то продажи и вариант доставки процесс, который
поддерживает возвращенные товары будут исключены из экземпляра службы.
Параметры конфигурации представляются заказчику инструменты, которые отражают то, что может быть
экземпляры позже. В настоящее время мы предлагаем бинарный вариант для проверки наличия мест, который контролирует или нет
переключения на паре созданных для соответствующих хостов в экземпляр службы. Переключения на пару потребляет
дополнительных ресурсов, и поэтому может влиять на стоимость. Аналогично безопасности предлагаются в качестве опции двоичного
В текущей реализации. Она контролирует подсети архитектуры и инфраструктуры или
Не брандмауэры используются. Масштабируемость опция определяет, будет ли решение развертывается на
централизованное решение с одного хоста или децентрализованное решение с несколькими узлами.
Обычай государство также собирается требования заказчика производительность. Они определены в терминах
пропускной способности и времени отклика цели для варианта бизнес-процесса. Информация используется
последующие инструменты для поддержки инфраструктуры выборе дизайна и производительности размеров.
Как только функциональным и нефункциональные требования клиента на обслуживание в полном объеме указано,
Модель жизненного цикла обслуживания в состоянии перехода к несвязанного состояния.
D. Unbound
Несвязанного состояния увеличивает требования к системе с информацией из
программного обеспечения. Информация, полученная от поставщика программного обеспечения включает в себя описание компонентов
, необходимых для поддержки выбранных вариантов бизнес-процесса. Они могут включать серверы приложений,
поиск серверов и артефактов программного кода. Знание, какие компоненты необходимы можете
влияют на выбор инфраструктуры в следующее состояние.
Информация поставщика программного обеспечения также определяются внешними программными компонентами, которые не являются частью
службы развертываются, но которые используются экземпляром службы. Например, порядок и
обработка счетов бизнес-процессов варианте может потребоваться внешние услуги по управлению выходом для
счет-фактура печати и проверки кредитоспособности услуг для проверки финансовой информации. Инструмент признает, которые
внешние услуги необходимы, побуждает клиента, чтобы выбрать из списка известных службы
поставщиков, и получает любую дополнительную информацию о конфигурации от клиента.
Как только поставщик программного обеспечения конкретные требования будут завершены, экземпляр службы имеет свои
6
требования полностью определены. Модель жизненного цикла системы является возможность перехода к заземленной
состоянии.
Е. заземлением
Заземленной государство развивается полный дизайн для экземпляра службы. Это включает в себя
детальное проектирование инфраструктуры, отображение программных компонентов для компонентов инфраструктуры
и ссылки на конфигурации данные, необходимые компоненты. В текущей реализации
использует три инструмента для уточнения информации из несвязанного состояния, чтобы создать информацию о конструкции
заземленной государства.
Первым инструментом является шаблона проектированию инфраструктуры службы. Этот инструмент использует конфигурацию
параметры и требования информации, полученной от клиента и поставщика программного обеспечения в
предыдущих состояний выбрать подходящий шаблон проектирования инфраструктуры из коллекции дизайн
альтернативы для службы. Модель рассматривает многие аспекты экземпляр службы, включая
аппаратного и программного обеспечения развертывания до операции, необходимые для выполнения тайм-менеджмента. Раз
альтернативные выбран, шаблон инфраструктуры Design Service инициализирует системы
Шаблон Модель для экземпляра службы и сохраняет его в модели Lifecycle Service.
Шаблон состоит из словаря реальных концепций, таких как компьютерные системы, подсети и
сервер приложений.
Модель системы шаблона указывает диапазоны и значения по умолчанию для выполнения таких параметров,
как количество серверов приложений, объем памяти для каждого сервера приложений, а также
число рабочих процессов в серверах приложений. Параметры выбранной клиентом, такие как
высокой доступности и безопасности, также отражены в шаблонах, например, при сбое пар и подсети
Архитектура.
Второй инструмент определяет эксплуатационные параметры описанной выше. У нас есть два
реализаций, которые выполняют эту функцию, иллюстрирующих гибкость нашего подхода к
использования альтернативных инструментов множеств. Первая реализация просто проверяет шаблон для
параметров и позволяет клиенту установить их. Заказчик может установить параметр
в пределах указанного диапазона, или по умолчанию может быть выбран. Вторая реализация
Автоматизированная Performance Engineering (APE) службы. Она эксплуатирует требований и
прогностических моделей производительности автоматически указать соответствующий параметр производительности
значения.
Третий инструмент обслуживания шаблона. Он принимает в качестве входных данных система шаблонов
Модель и соответствующие параметры производительности. Он выводит модель системы, которая становится частью
Типовой Lifecycle Service. Система Модель представляет собой законченный дизайн для экземпляра службы
Ожидается, что для удовлетворения нефункциональных требований. После того как система Модель создана,
Обслуживание жизненного цикла модели является возможность перехода в связанное состояние.
F. связанного
Связанном состоянии уточняет заземленной государства с привязкой к ресурсам, например, хостами, хранения,
и сетевые из общего пула ресурсов виртуализированных. Обслуживание Получение ресурса взаимодействует
с управления ресурсами Pool Service от поставщика инфраструктуры для приобретения ресурсов
Бронирование по системе Модель экземпляра службы.
В связанном состоянии экземпляр службы может иметь побочные эффекты на других экземпляров службы. Это может
есть замки на ресурсы, которые препятствуют их использованию другими, и это может побороться за
7
доступ к общим ресурсам. После того как все ресурсы были приобретены, модели обслуживания жизненный цикл
возможность перехода к развернутой государством.
Г. Развернутые
Развернутом состоянии уточняет связанном состоянии с информацией о развернута и работает
Компоненты, которые составляют экземпляр службы. Это включает в себя сведения о привязке к управлению
и мониторингу услуг в работающей системе. Ресурс развертывания службы настраивает и
начинается ресурсов. Служба развертывания программного обеспечения устанавливает компоненты программного обеспечения, указанного в
Модель системы и запускает экземпляр службы, так что им можно управлять. Модель системы
включает в себя достаточную информацию, чтобы убедиться, что компоненты будут развернуты и начали в правильном
порядка. Настройка программного обеспечения Обслуживание грузов конфигурации службы данных полученных ранее
от клиентов, таких как продукт записей, которые будут добавлены в базу данных. И, наконец, экземпляр службы
становится доступной для пользователей.
На рисунке 2 показана модель обслуживания жизненного цикла и его суб-моделей. Это показывает, преобразование
от шаблона дизайна модели инфраструктуры до модели системы. Конфигурация
Значения параметров, предоставленных заказчиком и поставщиком программного обеспечения через функциональные и нефункциональные
Требования, направлять как модельная система шаблонов оказывает инфраструктуры
Шаблон службы. APE может быть использован при выборе оптимальных значений параметров производительности для
Модель системы шаблонов. Обслуживание экземпляра шаблона создается система модели с использованием
Модель системы шаблонов и значений параметров производительности. Система Модель используется для
направить последующего приобретения операцию ресурсов, развертывания и выполнения для службы
экземпляр. Операции Дизайн шаблона в шаблон дизайна модели инфраструктуры распространяться
через модель системы шаблонов для модели системы.
Обслуживание жизненного цикла модели
Инфраструктура
Дизайн шаблона
Модель
Система шаблонов
Модель Модель системы
Инфраструктура шаблона
Design Service
Шаблон
Инстанцирование
Обслуживание
Автоматизированная Performance
Машиностроение
Многие
конфигурация
альтернативы
доступный
Производительность
параметр
величины
неизвестный
Полный дизайн
Государственная информационная
Часть
Ссылка Часть Часть
Решите параметр
величины
Выбирать
альтернатива
Рисунок 2: Service Lifecycle моделей и услуг
8
H. Справочная моделей и преобразований
Мы широко использовать дополнительный моделей для руководства модель превращений и переходов
Обслуживание между жизненным циклом модели государства. Такие модели, специфичные для конкретного инструмента и
подходов к решению нефункциональные требования и не являются частью службы жизненным циклом
Модель. Модель жизненного цикла обслуживания включает в себя только ссылки на дополнительную моделей. Секции
IV.B, IV.E, и IV.F объяснить, как дополнительное модели поддерживают Проектирование инфраструктуры
Шаблон службы, службы безопасности и автоматизированного обслуживания инженерной деятельности,
соответственно.
Многие из наших инструментов требует использования гетерогенных моделей для реализации модели
преобразованиях. Раздел IV.A описывает нашу работу по имени рамках ModelWeaver, что
поддерживает создание таких инструментов.
I. служба управления жизненным циклом
Наш подход обеспечивает управление жизненным циклом для обслуживания экземпляров. Это включает в себя услуги дизайна,
создание, во время управления и управления изменениями. Рисунок 4 иллюстрирует эти четыре аспекта
Служба управления жизненным циклом и их отношение к жизненным циклом обслуживания модели государства.
Модель жизненного цикла обслуживания может находиться только в одном состоянии одновременно. Инструменты перехода обслуживания
Жизненный цикл модели от общего состояния до развернутого состояния. Вернуться отслеживание разрешено
так что можно изучить влияние изменений конфигурации службы и нефункциональные
Требования по полученной конструкции для экземпляра службы.
Система Модель включает в себя описание операций, которые могут быть выполнены на службу
например, для выполнения управления. Они соответствуют операциям на обслуживание, например, когда
своей службы жизненным циклом Модель находится в связанной или развернутом состоянии. Связанные поддержки операций
Приобретение ресурсов, архивирования экземпляр службы для последующего использования, и клонирование службы
экземпляр. Развернутые поддержки операций настройки и эксплуатации услуг, например,
в том числе операции, чтобы изменить количество ресурсов. Развернуть экземпляр службы может быть остановлена
общие несвязанных связаны
пользовательские заземленной развернуто
Настройка и выберите приобрести Начать
Отпустите Остановить
ресурсы
Работать
Архив, Clone * Изменение требований
* Примечание клонированной копии является новым экземпляром службы в связанном состоянии
Легенда
Следующее состояние
То же состоянии
Пред. состояние
Рисунок 3: Управление жизненным циклом для экземпляра службы
9
и вернулся в связанном состоянии. Он может быть запущен снова, чтобы возобновить в развернутом состоянии.
Экземпляр службы в связанном состоянии, может перейти к заземленной государства. При желании экземпляра
вычислительной техники и ресурсов хранения или могут быть возвращены в пул ресурсов.
Клонирование используется для создания нескольких экземпляров службы для разработки, тестирования или производства
экземпляров службы. Это работа в связанном состоянии, что создает другой экземпляр службы с
Обслуживание жизненного цикла модели в связанном состоянии. Клон может быть запущен и работать параллельно с
Оригинальный экземпляр. Клон получает полную копию системы Жизненный цикл экземпляра службы
Модели до информацию для заземленной государства. Различные случаи ресурсов приобретаются на
обеспечить изолированной системы в связанном состоянии.
Модель преобразования и операции все реализуется с помощью общего запроса на изменение
(CR) механизм. Механизм CR описано в разделе IV.C.
IV. Исследовательские темы
В этом разделе описаны темы исследований, которые способствуют нашей модели управляемых услуг методом
Управление жизненным циклом.
А. ModelWeaver
ModelWeaver является научно-исследовательским платформу, которая позволяет использовать информацию из разнородных
Модели для создания инструментов, которые поддерживают наш подход. Есть много систем моделирования и
стандартизация усилия для модели ИТ-систем [34] [35] [36] [37] [38] [39] [40]. Каждая лучше всего подходит
для моделирования конкретный аспект системы. Каждый инструмент моделирования имеет входной и выходной форматы
описывается язык моделирования. ModelWeaver позволяет нам работать со многими видами моделей и
инструменты.
Мы требуем каждую модель, чтобы иметь мета-данных, который предоставляет информацию о местоположении
входы, выходы и модели формата. Минимальный набор мета-данные, полученные ModelWeaver является
расположение модели, например, URL. Дополнительные мета-данные для модели включает личность
Инструменты, которые могут предоставить конкретные операции на модели, например, для вызова редактора модели.
ModelWeaver использует стратегию трансформации моделей, что компиляторы используют. Информация
извлекается и обрабатывается от входа моделей в их родных форматов входных и введены в
нормированные промежуточный формат, на котором преобразования осуществляются до целевой модели
синтезированы.
На рисунке 4 показана RDF tokenizers [41] используется для преобразования информационной модели от моделей
и B в своей нормированной форматов. ModelWeaver использует RDF троек как нормированный временного формата.
Троек хранятся в магазин RDF модели [42]. Синтезатор RDF затем использует соответствующий
подмножествах нормированного информация от А и В, чтобы создать выходной модели C. синтезатора
аналогичный генератор кода компилятора автора.
Рисунок 4: ткачество и преобразование моделей
10
Использования и повторного использования нормированных форматов снижает усилия, необходимые для создания новых преобразований.
Этот принцип позволяет избежать квадратичного роста точечных преобразований, требующих О (п) нормализациями
вместо O (n2) попарно преобразования форматов н. Он также разделяет логику преобразования
от входных и выходных форматов и незначительные изменения входных и выходных форматов. Другие подходы
[45] понести квадратичного роста попарно преобразований.
Преимущество использования RDF для нормированного формата является то, что предлагает мощные функции для
осуществление преобразований логики. Функции включают в себя простые примитивы отбора, запрос
языков, таких как SPARQL [43], и правила, и вывод системы, такие как двигатель Jena правил.
Никакой другой основы моделирования обеспечивает такой богатый набор инструментов. Понятный для человека текст в формате RDF
N3 [44] также позволяет определить, осмотр и манипуляции моделями людьми. N3 является
полезно для проверки временной модели при использовании сложных цепочек инструментов для поддержки
преобразование. Другие языки Преобразование модели также доступны [46].
Раздел I описывает поддержку ModelWeaver для настройки службы и ее оркестровки
APE.
В. Инфраструктура шаблона дизайна моделей и службы экземпляра шаблона
Проектирование и управление ИТ-системы для поддержки услуг является сложным, подверженным ошибкам деятельности
, что требует значительных человеческих знаний, времени и средств. Важной задачей является автоматизация
этот процесс, используя лучшие в своем классе стратегий отгоняют от человека экспертов. Проектирование инфраструктуры
Шаблон Модель отражает интегрированный передовой практике шаблоны проектирования для службы. Он подготовлен
людей и учитывает параметры конфигурации и нефункциональные требования.
Инфраструктура модели шаблона дизайна являются дополнительными моделями.
Шаблон инфраструктуры Дизайн модели выполнен из словаря реальных концепций,
таких как компьютерные системы, подсети, или программной услуги. Она включает в себя следующие.
· Структура и конфигурация аппаратной инфраструктуры, таких как компьютер
Системы, дисков, сетевых адаптеров, подсети и брандмауэры.
· Характеристики необходимого оборудования указаны, таких как тип, обработка
мощности и памяти компьютерной системы, пропускная способность сетевого адаптера или размер или
латентности диска.
· Внутренняя структура и конфигурация программного обеспечения служб, работающих на каждом
компьютерные системы, достаточно подробно, чтобы автоматически разворачивать, настраивать и управлять
них, кроме того, развертывание зависимостей между программным обеспечением услуг, таких
что они установлены, настроены, начал, взятых на линии, взятой в автономном режиме, остановился и
удален в правильном порядке.
· Конфигурация системы мониторинга и сигнализации для аппаратного и программного обеспечения
ландшафта.
· Набор операций, представленных в виде запросов на изменения (CR), которые могут быть применены к
расширить или изменить систему.





11
















}






















12

























































13















поддерживает.


обслуживание.

















окружающей среды.








14
























Состояние
1
Состояние
2
Состояние
3






1.

2.


3.


Состояние







15













































Безопасность

16









Это












политики.

















17







































18









Каждый












Они





















Модель
Производительность








19



ресурсов.






















20



























информация

21












VI.








работу.



















22
Ссылки

















































23









































Отменить измененияAlpha
Adaptivnyye Informatsionnyye tekhnologii dlya upravleniya zhiznennym tsiklom obsluzhivaniya
Dzherri Rolia, Giyom Belrose, Klaus marka, Naydzhel Edvards, Daniel? Gmach, Sven Graupner,
Yokhannes Kirschnick, Brayan Stivenson, Paul Vickers, Lourens Uilkok
HP Laboratorii
HPL-2008-80
Klyuchevoye slovo (a):
Sravnitel?nyy analiz, biznes-prilozheniy, proizvoditel?nost? razmerov, optimizatsiya, programmnoye obespecheniye kak usluga.
Annotatsiya:
Perekhod ot korporativnykh vychisleniy dlya servis-oriyentirovannykh i oblachnykh vychisleniy proiskhodit ochen?
bystro. Poskol?ku spros na uslugi boleye vysokogo znacheniya uvelichivayet tam budet bol?shaya neobkhodimost? v obsluzhivanii
nastroyki, avtomatizatsii dlya predostavleniya i upravleniya uslugami, a takzhe vozmozhnost?
Predlagayem uslugi, kotoryye udovletvoryayut nefunktsional?nyye trebovaniya. Eta stat?ya opisyvayet nashe issledovaniye
Model?-oriyentirovannyy podkhod dlya upakovki vysokogo korporativnogo programmnogo obespecheniya znacheniya dlya ispol?zovaniya v kachestve servisa i na
upravleniye zhiznennym tsiklom servisov obsluzhivaniya sluchayakh v obshchey virtual?nyye puly resursov. Nashi
Podkhod snasti nefunktsional?nyye takiye voprosy, kak dostupnost?, bezopasnost?, masshtabiruyemost?, gibkost? i
proizvoditel?nost?. Oni vazhny dlya vysokoy stoimosti IT-uslug. Issledovaniye s uchastiyem
SAP sistema demonstriruyet nash progress. Nashi rezul?taty pokazyvayut, chto model?-oriyentirovannyy podkhod mozhet byt?
privlekatel?nym dlya postavshchikov programmnogo obespecheniya, kotoryye napravleny na podderzhku bol?shogo kolichestva ekzemplyara sluzhby.
Vneshniy Vashi Data: 21 iyulya 2008 g. [Tekst] Utverzhdeno dlya vneshney publikatsii
Vnutrenniye Vashi Data: 21 iyulya 2008 goda [Polnyy tekst]
© Copyright 2008 Hewlett-Packard Development Company, LP
1
 
Annotatsiya perekhod ot korporativnykh vychisleniy dlya servis-oriyentirovannykh i oblachnykh vychisleniy proiskhodit ochen? bystro.
Poskol?ku spros na uslugi boleye vysokogo znacheniya uvelichivayet tam budet bol?shaya potrebnost? v sluzhbu nastroyki, avtomatizatsii
predostavleniye i upravleniye uslugami, i vozmozhnost? predlagat? uslugi, kotoryye udovletvoryayut nefunktsional?nyye trebovaniya.
Eta stat?ya opisyvayet nashe issledovaniye na modeli-oriyentirovannyy podkhod k upakovke vysokokachestvennogo programmnogo stoimosti predpriyatiya dlya ispol?zovaniya v kachestve
uslug i po upravleniyu zhiznennym tsiklom servisov obsluzhivaniya sluchayakh v obshchey virtual?nyye puly resursov. Nash podkhod
snasti nefunktsional?nyye takiye voprosy, kak dostupnost?, bezopasnost?, masshtabiruyemost?, gibkost? i proizvoditel?nost?. Eto vazhno
za vysokoy stoimosti IT-uslug. Issledovaniye s uchastiyem sistemy SAP demonstriruyet nash progress. Nashi rezul?taty pokazyvayut,
, chto model?-oriyentirovannyy podkhod mozhet byt? privlekatel?nym dlya postavshchikov programmnogo obespecheniya, kotoryye napravleny na podderzhku bol?shogo chisla uslug
sluchayev
Indeks usloviya, programmnoye obespecheniye kak usluga, Enterprise Computing, Upravleniye informatsionnykh tekhnologiy.
I. VVEDENIYe
Predpolagayetsya, chto k 2015 godu boleye 75% informatsionnykh tekhnologiy (IT) infrastruktury
byt? priobreten v kachestve sluzhby ot vneshnikh i vnutrennikh khosting-provaydery [1]. Yest? mnogo
Prichiny etoy tendentsii. Te predpriyatiya, kotoryye nuzhny IT-infrastruktury mozhete priobresti yego v kachestve sluzhby
bystreye, s men?shim riskom razvertyvaniya, snizheniye kapital?nykh zatrat i sokrashcheniye potrebnosti v opredelennykh IT
navyki. Postavshchiki uslug mogut predlagat? uslugi s bol?shey zrelosti protsessov i povysheniya effektivnosti
v to vremya kak amortizirovat? infrastruktury i zatrat na rabochuyu silu po mnogim predpriyatiyam, kotoryye oni obsluzhivayut.
Yest? mnogo vidov IT-infrastruktury predlagayetsya v kachestve uslugi. Servery, sistemy khraneniya i setevoye
mogut byt? predlozheny vnutrenney korporativnoy IT-provayderov ili provayderov Internet-uslug [2]. E-mail, slovo
obrabotki, i drugiye prostyye biznes-prilozheniy v nastoyashcheye vremya predlagayut mnogiye provaydery [3]. Bol?she
Kompleks biznes-prilozheniy, realizatsii biznes-protsessov, takikh kak vzaimootnosheniya s kliyentami
upravleniya, poryadok i obrabotki schetov-faktur i upravleniya tsepochkami postavok takzhe predlagayetsya v kachestve
Sluzhba [4] [5] [6]. Usluga mozhet byt? predlozhena v neskol?kikh napravleniyakh. Eto mozhet byt? portal, kotoryy dostupen cherez
Veb-brauzery, konechnoy tochki veb-sluzhby ili kombinatsii etikh dvukh.
Nashe vnimaniye sosredotocheno na uslugi vysokogo znacheniya, realizatsii biznes-protsessov dlya malogo biznesa
do korporativnykh kliyentov klassa. Eti kliyenty mogut imet? tysyachi i boleye chelovek
i tysyachami ili millionami pol?zovateley ili ustroystv s podderzhkoy Web, kotoryye vzaimodeystvuyut s ikh obsluzhivaniyem. Nashi
Dizayn tochkoy proyekta yavlyayetsya obespecheniye ekonomicheski effektivnogo razmeshcheniya odnogo milliona vysokoy stoimosti uslug
ekzemplyarov. Eto vedet nasha zadacha sdelat? upravleniye zhiznennym tsiklom servisov, kak kliyent privodom i
avtomatizirovany naskol?ko eto vozmozhno.
Yest? neskol?ko akterov, kotoryye uchastvuyut v SaaS. Infrastruktura provaydery predostavlyayut
Adaptivnaya informatsionnykh tekhnologiy dlya obsluzhivaniya
Upravleniye zhiznennym tsiklom
JERRY ROLIA, Giyom Belrose, Klaus BRAND, Naydzhel Edvards, Daniel? GMACH, SVEN
GRAUPNER, Yokhannes Kirschnick, Brayan Stivenson, Pol VICKERS, Lourens
Uilkok
2
infrastruktury, fizicheskikh i virtual?nykh, dlya raboty ekzemplyarov sluzhby. Postavshchiki programmnogo obespecheniya
predostavlyat? programmnoye obespecheniye, kotoroye postavlyayetsya kak usluga. Razrabotchiki programmnogo obespecheniya sozdayut programmnoye obespecheniye. Kliyenty
Kontrakt s postavshchikom infrastruktury i programmnogo obespecheniya, chtoby potreblyat? uslugu. Obsluzhivaniye
realizuyet biznes-protsessov dlya kliyentov. Ekzemplyar sluzhby predostavlyayet uslugi
kliyentov. Kliyent mozhet imet? razrabotku, testirovaniye i proizvodstvo ekzemplyarov sluzhby. 
pol?zovateley uslug yavlyayutsya sotrudniki, IT-sistem, veb-ustroystv, ili biznes-partnerov
kliyentov. V nekotorykh sluchayakh postavshchik infrastrukturnykh resheniy, programmnogo obespecheniya i postavshchik programmnogo obespecheniya yavlyayutsya
odno tseloye.
Eta stat?ya opisyvayet nashe issledovaniye na modeli-oriyentirovannyy podkhod dlya upakovki vysokogo znacheniya
korporativnogo programmnogo obespecheniya kak uslugi i po upravleniyu zhiznennym tsiklom servisov obsluzhivaniya v sluchayakh
obshchiye virtual?nyye puly resursov. My ispol?zovali sluchayev ispol?zovaniya SAP [6] dlya razrabotki nashikh idey i
V kachestve primerov predstavleny v etoy stat?ye. SAP yavlyayetsya bogatym istochnikom vysokoy stoimosti predpriyatiya
uslug i sozdayet mnogo problem, kotoryye neobkhodimo reshat? postavshchikami programmnogo obespecheniya. Nashi rezul?taty
Pokazano, chto model?-oriyentirovannyy podkhod mozhet byt? privlekatel?nym dlya postavshchikov programmnogo obespecheniya, kotoryye napravleny na podderzhku
Bol?shoye kolichestvo ekzemplyarov sluzhby.
Ostavshayasya chast? raboty organizovana sleduyushchim obrazom. Razdel II opisyvayet sootvetstvuyushchuyu rabotu. Razdel
III predstavlyayet nashu model?-oriyentirovannyy podkhod dlya upravleniya zhiznennym tsiklom servisov. Razdel IV ob?yasnyayet
nauchno-issledovatel?skiye proyekty, kotoryye sposobstvuyut podkhod. On opisyvayet nashe ispol?zovaniye modeley, avtomatizatsiya
sluzhby konfiguratsii ekzemplyara i upravleniya, a takzhe podderzhka nefunktsional?nyye trebovaniya.
Razdel V opisyvayet nashu tekushchey realizatsii s sistemoy SAP v kachestve primera. Razdel VI
predlagayet Rezyume i zaklyuchitel?nyye zamechaniya i plan nashey budushchey raboty.
II. SVYAZANNYYe S RABOTY
Model? upravlyayemoy metody byli, po mneniyu mnogikh issledovateley i ekspluatiruyemykh v real?nom mire
sredakh [4] [6]. V obshchem, metody sbora informatsii v modeli, kotoryye mogut byt? ispol?zovany dlya
avtomaticheski generirovat? kod, svedeniya o konfiguratsii ili izmeneniya konfiguratsii.
Tsel? modelyami podkhoda yavlyayetsya povysheniye avtomatizatsii i umen?shit? chelovecheskiye usiliya i
Raskhody, neobkhodimyye dlya podderzhki IT-sistem. Sistemy mozhet imet? mnozhestvo aspektov konkretnoy tochki zreniya, naprimer,
funktsional?nosti, bezopasnosti, proizvoditel?nosti, sootvetstviya, kazhdyy s model?yu. Ponyatiye tochki zreniya
byla vvedena v model? tonny Ssylka dlya raspredelennykh vychisleniy [7]. Khotya my ispol?zuyem
razlichnykh tochek zreniya, kontseptsiya analogichna i printsip razdeleniya problem to zhe samoye.
Nasha tsel? zaklyuchayetsya v razrabotke i integratsii modeley, kotoryye otrazhayut razlichnyye tochki zreniya dlya podderzhki zhiznennogo tsikla
upravleniye ekzemplyarami sluzhb.
Yest? neskol?ko razlichnykh paradigm kak ekzemplyary sluzhby mozhet byt? vyneseno v obshchey
pulov resursov. Oni mogut byt? klassifitsirovany kak mul?ti-arendy, izolirovannykh arendy, i gibridnyye arendy
[8] [9]. Mnogopol?zovatel?skoy provodit mnogo kliyentov s odnogo ekzemplyara programmnogo obespecheniya sluzhby. Isolatedtenancy
sozdayetsya otdel?nyy ekzemplyar sluzhby dlya kazhdogo kliyenta. Gibrid mozhet podelit?sya nekotoroy chasti
Ekzemplyar sluzhby, takiye kak bazy dannykh vo mnogikh kliyentov, sokhranyaya pri izolirovannom
servery prilozheniy. Mnogopol?zovatel?skoy sistemy mozhet umen?shit? soderzhaniye i zadachi upravleniya
dlya postavshchikov, no eto mozhet byt? trudneye obespechit? kliyentu konkretnyye urovni obsluzhivaniya. Isolatedtenancy
sistemy obespechivayut maksimal?nuyu gibkost? i proizvoditel?nost? naibol?shuyu bezopasnost?, no predstavit?
boleye slozhnyye zadachi tekhnicheskogo obsluzhivaniya. Gibridnyye arendy podkhody imeyut cherty oboikh podkhodov. My
sosredotochit?sya na izolirovannyye i gibridnyye podkhody dlya okazaniya uslug ekzemplyary v obshchey virtualizirovannoy
pulov resursov. Guo i dr.. Al? rassmatrivat? voprosy podderzhki nastroyki i razvertyvaniya Multitenancy
ekzemplyarov sluzhby [10].
3
Okazaniye uslug ekzemplyary v obshchey virtual?nyye puly resursov predstavlyayet konfiguratsiyu,
razvertyvaniye i upravleniye vyzovami. Zhang i soavt. [11] predstavlyayut politike oriyentirovannyy podkhod dlya
ukazaniyem variantov konfiguratsii uslug. Ramshaw i soavt. [12] izuchit? vozmozhnost? ispol?zovaniya
instrumenty udovletvoreniya ogranicheniy dlya ukazaniya al?ternativnykh konfiguratsiy sistemy. Nash podkhod svyazan
etikh modeley, no ssylki konfiguratsii s drugimi modelyami dlya razvertyvaniya vo vremya vypolneniya i izmeneniya
upravleniya. Promyshlennyye podkhody predlagayut sredstva vizual?noy razrabotki programmnogo obespecheniya i infrastruktury
postavshchikov, kotoryye pomogayut vruchnuyu ukazat? steka programmnogo obespecheniya i modeley infrastruktury topologii
Uslugi i servis sluchayev [13] [14]. S nashey tsel?yu podderzhki odin million vysokoy stoimosti uslug
sluchayakh, my schitayem, chto kliyenty ukazat? ikh nefunktsional?nyye trebovaniya, no eto
Otvetstvennost? nashey ramkakh okazyvat? sootvetstvuyushcheye programmnoye obespecheniye i infrastrukturu
konfiguratsii dlya ekzemplyara sluzhby.
Oblachnyye vychisleniya predlagayet integrirovannoye vnedreniye programmnogo obespecheniya, khostov, khranilishch i setey
k obshchey virtual?nyye puly resursov. Ona izuchayetsya neskol?kimi issledovatel?skimi gruppami [15] [18] [19].
Promyshlennyye podkhodov imeyutsya v nalichii [2] [13] [16]. Nasha tsel? zaklyuchayetsya v obespechenii razvertyvaniya i vypolneniya
upravleniye ekzemplyarami sluzhb na neskol?kikh oblachnykh vychisleniy tselevykh obespechivaya tem samym boleye
gibkost? dlya zakazchikov. Dlya oblegcheniya nashikh issledovaniy my razrabotali nashu sobstvennuyu obshchey virtualizirovannoy
Pul resursov na osnove Xen [20] i sootvetstvuyushchiy pul resursov Management Service.
Avtonomnykh vychisleniy napravlena ??na sokrashcheniye chelovecheskikh usiliy, neobkhodimykh dlya tekushchey upravleniye
ekzemplyarov sluzhby [21]. Eto vklyuchayet v sebya yezhednevnyye, yezhenedel?nyye i yezhemesyachnyye takikh zadach, kak obespecheniye bazy dannykh
Tablitsy sootvetstvuyushchego razmera, perevorachivaniye sootvetstvuyushchiye log-fayly, a takzhe vypolneniye testy na sovmestimost?.
Nash podkhod ob?yedinyayet takiye vo vremya upravleniya na sluzhbu v techeniye zhiznennogo tsikla ekzemplyarov sluzhby.
Etot aspekt upravleniya imeyet vazhnoye znacheniye dlya dostizheniya nashey tseli za provedeniye ochen? bol?shogo chisla
ekzemplyarov sluzhby.
Tam bylo posledniye raboty po avtomatizatsii upravleniya effektivnost?yu virtualizirovannykh obshchiye
puly resursov [22] [23] [24] [25] [26] [27] [28] [25] [29] [30]. Metody rassmatrivayutsya takiye voprosy, kak
moshchnost?yu planirovaniye i obespecheniye proizvoditel?nosti, energopotrebleniya i ekonomicheskogo osnove kachestva obsluzhivaniya.
Nash podkhod zaklyuchayetsya v zakhvate dostatochnoy informatsii v modelyakh v dopolneniye k takim metodam i
vzaimodeystvovat? s nimi v sluzhbu podderzhki upravleniya zhiznennym tsiklom. Nashi posledniye raboty po pulu resursov
Upravleniye pomogayet nam glubzhe ponyat? problemy, kotoryye voznikayut [27] [29] [30].
Nakonets, model? podkhoda my predstavlyayem obespechivayet vysokiy uroven? avtomatizatsii sluzhby
Upravleniye zhiznennym tsiklom, no eto ne platforma avtomatizatsii sama po sebe. Skoreye vsego, eto servis, kotoryy yavlyayetsya
sozdayutsya i upravlyayutsya, kak pravilo, ispol?zovat? odnu ili neskol?ko platform avtomatizatsii. My ispol?zuyem
SmartFrog [17] dlya avtomatizatsii razvertyvaniya programmnogo i apparatnogo obespecheniya v nashey prototipa resursa
basseyn, no my mogli by ispol?zovat? drugiye platformy avtomatizatsii vmesto ili v dopolneniye.
III. Upravleniye zhiznennym tsiklom PO ekzemplyarov sluzhby
V etom razdele predstavleny upravleniya zhiznennym tsiklom servisov osnova dlya ekzemplyarov sluzhb. Obsluzhivaniye
Upravleniye zhiznennym tsiklom reguliruyet sozdaniye i upravleniye ekzemplyarami sluzhb dlya kliyentov.
Osnovy ispol?zuyet model?-oriyentirovannyy podkhod s informatsiyey o ekzemplyara sluzhby
zakhvachennykh v ryad gosudarstv model? i raz?yemnyye dopolnitel?nykh modeley, kotoryye opisyvayut programmnogo obespecheniya i
Informatsionnaya infrastruktura provaydera. My nazyvayem nashu model?-oriyentirovannyy podkhod kak model?
Informatsionnyy potok (MIF) [31], potomu chto yego vnimaniye na sbor i povtornoye ispol?zovaniye informatsii o modeli k
avtomatizirovat? upravleniye zhiznennym tsiklom uslug.
4
MIF ssylki tri tochki zreniya.
1.The konfiguratsii sluzhby funktsional?nyye vozmozhnosti, predlagayemyye postavshchikom programmnogo obespecheniya.
2.The konfiguratsii programmnykh komponentov, kotoryye realizuyut ekzemplyar sluzhby.
3.The konfiguratsii infrastrukturu, virtual?nyye i fizicheskiye, na kotorom razmeshcheny ekzemplyary sluzhby.
MIF pozvolyayet izmeneniye v odnoy tochke zreniya, svyazany s izmeneniyami v drugikh tochek zreniya. Dlya
Naprimer on svyazyvayet izmeneniya v otdel?nykh funktsional?nykh uslug ili nefunktsional?nyye trebovaniya k
neobkhodimyye izmeneniya v konfiguratsiyu prilozheniy i infrastruktury topologii. S drugoy storony, model?
Informatsiya takzhe mozhet byt? ispol?zovan dlya opredeleniya posledstviy izmeneniya infrastruktury na
Povedeniye ekzemplyara sluzhby.
Printsip model? nashego podkhoda yavlyayetsya model? obsluzhivaniya Lifecycle. Obsluzhivaniye Lifecycle
Model? inkapsuliruyet ekzemplyar sluzhby konkretnoy informatsionnoy modeli i razvivayetsya cherez shtaty
pokazano na risunke 1. Zhiznennyy tsikl nachinayetsya s levoy storony s katalogom uslug, kotoryye yavlyayutsya
podderzhivayetsya nashim podkhodom i zakanchivayetsya sprava s razvernuta i rabotayet sistema. Tsikly mogut
vstrechayetsya na kazhdom shagu, no ne pokazano na risunke dlya prostoty. Gosudarstva upravlyayut
Konfiguratsiya sluzhby, infrastruktura vybor, resurs priobreteniya, razvertyvaniya i vypolneniya
rabota ekzemplyar sluzhby. V sleduyushchikh podrazdelakh opisyvayutsya Katalog uslug i
sostoyaniy modeli Lifecycle Service.
A. Katalog uslug
Katalog uslug opredelyayet uslugi, kotoryye mogut predostavlyat?sya s ispol?zovaniyem nashego podkhoda. Uchityvaya nashi
kontekste podderzhki vysokokachestvennykh uslug predpriyatiya znacheniye dlya postavshchikov programmnogo obespecheniya, takikh kak SAP, kazhdaya
Zapis? v kataloge opisany sluzhby, kotoraya predstavlyayet soboy sovokupnost? protsessov, svyazannykh s biznesom. Primery
Protsessy biznesa vklyuchayut prodazhi i dostavki, a takzhe upravleniya tsepochkami postavok. Opisaniye
vklyuchayet v sebya tekstovyye opisaniya i vizual?nykh oboznacheniy, takikh kak BPMN [32], chtoby proillyustrirovat? biznesa
protsessov. Krome togo, v kataloge zapis? ukazyvayet nabora instrumentov, kotoryy podderzhivayet sozdaniye i
upravleniye sootvetstvuyushchemu ekzemplyaru sluzhby.
Posle togo, kak usluga byla vybrana zakazchikom my ispol?zuyem zapis? v kataloge dlya sozdaniya
Obsluzhivaniye zhiznennogo tsikla modeli dlya ekzemplyara sluzhby. Model? zhiznennogo tsikla obsluzhivaniya mozhet byt? v odnom iz shesti
sostoyaniyakh: kak pravilo, cherez razvernuty. Obsluzhivaniye model? zhiznennogo tsikla perekhodov mezhdu sostoyaniyami, kak
nabora instrumentov rabotayet na ekzemplyar sluzhby. V sleduyushchikh podrazdelakh opisyvayutsya model?yu
obshchiye nesvyazannykh svyazany
pol?zovatel?skiye zazemlennoy razvernuto
Obshchiye
Virtualizirovannyye
Resurs
Basseyn
Obshchiye
Virtualizirovannyye
Resurs
Basseyn
Katalog uslug
Obsluzhivaniye
konfiguratsiya
Infrastruktura
vybor
Priobretat?
Razvertyvaniye i
Operatsiya
Risunok 1: Shtatakh Model? sluzhby zhiznennym tsiklom
5
informatsiya, kotoraya otrazhena v kazhdom gosudarstve i privesti primery instrumentov, kotoryye ispol?zuyutsya dlya podderzhki
perekhoda mezhdu sostoyaniyami.
V. Obshchiye
Eto nachal?noye sostoyaniye modeli Lifecycle Service. Posle sluzhby dannykh zhiznennogo tsikla modeli
Struktura gotovitsya ona v sostoyanii perekhoda k pol?zovatel?skoy gosudarstva.
C. pol?zovatel?skikh
Pol?zovatel?skoye sostoyaniye dopolnyayet model? zhiznennogo tsikla obsluzhivaniya s funktsional?noy i nefunktsional?nyye
trebovaniya. Eti trebovaniya sobrannyye odnogo ili neskol?kikh instrumentov v nabore.
Instrument funktsional?nosti konfiguratsii usluga pozvolyayet kliyentu ukazat? podmnozhestvo
sluzhby biznes-protsessov, kotoryye dolzhny byt? ispol?zovany. Naprimer, prodazhi i postavki mogut byt? neobkhodimy
no ne upravleniya tsepochkami postavok. Krome togo, kazhdyy biznes-protsess mozhet imet? neskol?ko biznes
Protsess varianty, t. ye. logiki, kotoraya obrabatyvayet razlichnyye obstoyatel?stva dela. Zhelayemyy nabor
Biznes-protsess variantov dlya kazhdogo vybrannogo protsessa takzhe dolzhny byt? ukazany. Naprimer, yesli
biznesa zakazchika ne prinimayutsya vozvrat tovara, to prodazhi i variant dostavki protsess, kotoryy
podderzhivayet vozvrashchennyye tovary budut isklyucheny iz ekzemplyara sluzhby.
Parametry konfiguratsii predstavlyayutsya zakazchiku instrumenty, kotoryye otrazhayut to, chto mozhet byt?
ekzemplyary pozzhe. V nastoyashcheye vremya my predlagayem binarnyy variant dlya proverki nalichiya mest, kotoryy kontroliruyet ili net
pereklyucheniya na pare sozdannykh dlya sootvetstvuyushchikh khostov v ekzemplyar sluzhby. Pereklyucheniya na paru potreblyayet
dopolnitel?nykh resursov, i poetomu mozhet vliyat? na stoimost?. Analogichno bezopasnosti predlagayutsya v kachestve optsii dvoichnogo
V tekushchey realizatsii. Ona kontroliruyet podseti arkhitektury i infrastruktury ili
Ne brandmauery ispol?zuyutsya. Masshtabiruyemost? optsiya opredelyayet, budet li resheniye razvertyvayetsya na
tsentralizovannoye resheniye s odnogo khosta ili detsentralizovannoye resheniye s neskol?kimi uzlami.
Obychay gosudarstvo takzhe sobirayetsya trebovaniya zakazchika proizvoditel?nost?. Oni opredeleny v terminakh
propusknoy sposobnosti i vremeni otklika tseli dlya varianta biznes-protsessa. Informatsiya ispol?zuyetsya
posleduyushchiye instrumenty dlya podderzhki infrastruktury vybore dizayna i proizvoditel?nosti razmerov.
Kak tol?ko funktsional?nym i nefunktsional?nyye trebovaniya kliyenta na obsluzhivaniye v polnom ob?yeme ukazano,
Model? zhiznennogo tsikla obsluzhivaniya v sostoyanii perekhoda k nesvyazannogo sostoyaniya.
D. Unbound
Nesvyazannogo sostoyaniya uvelichivayet trebovaniya k sisteme s informatsiyey iz
programmnogo obespecheniya. Informatsiya, poluchennaya ot postavshchika programmnogo obespecheniya vklyuchayet v sebya opisaniye komponentov
, neobkhodimykh dlya podderzhki vybrannykh variantov biznes-protsessa. Oni mogut vklyuchat? servery prilozheniy,
poisk serverov i artefaktov programmnogo koda. Znaniye, kakiye komponenty neobkhodimy mozhete
vliyayut na vybor infrastruktury v sleduyushcheye sostoyaniye.
Informatsiya postavshchika programmnogo obespecheniya takzhe opredelyayutsya vneshnimi programmnymi komponentami, kotoryye ne yavlyayutsya chast?yu
sluzhby razvertyvayutsya, no kotoryye ispol?zuyutsya ekzemplyarom sluzhby. Naprimer, poryadok i
obrabotka schetov biznes-protsessov variante mozhet potrebovat?sya vneshniye uslugi po upravleniyu vykhodom dlya
schet-faktura pechati i proverki kreditosposobnosti uslug dlya proverki finansovoy informatsii. Instrument priznayet, kotoryye
vneshniye uslugi neobkhodimy, pobuzhdayet kliyenta, chtoby vybrat? iz spiska izvestnykh sluzhby
postavshchikov, i poluchayet lyubuyu dopolnitel?nuyu informatsiyu o konfiguratsii ot kliyenta.
Kak tol?ko postavshchik programmnogo obespecheniya konkretnyye trebovaniya budut zaversheny, ekzemplyar sluzhby imeyet svoi
6
trebovaniya polnost?yu opredeleny. Model? zhiznennogo tsikla sistemy yavlyayetsya vozmozhnost? perekhoda k zazemlennoy
sostoyanii.
Ye. zazemleniyem
Zazemlennoy gosudarstvo razvivayetsya polnyy dizayn dlya ekzemplyara sluzhby. Eto vklyuchayet v sebya
detal?noye proyektirovaniye infrastruktury, otobrazheniye programmnykh komponentov dlya komponentov infrastruktury
i ssylki na konfiguratsii dannyye, neobkhodimyye komponenty. V tekushchey realizatsii
ispol?zuyet tri instrumenta dlya utochneniya informatsii iz nesvyazannogo sostoyaniya, chtoby sozdat? informatsiyu o konstruktsii
zazemlennoy gosudarstva.
Pervym instrumentom yavlyayetsya shablona proyektirovaniyu infrastruktury sluzhby. Etot instrument ispol?zuyet konfiguratsiyu
parametry i trebovaniya informatsii, poluchennoy ot kliyenta i postavshchika programmnogo obespecheniya v
predydushchikh sostoyaniy vybrat? podkhodyashchiy shablon proyektirovaniya infrastruktury iz kollektsii dizayn
al?ternativy dlya sluzhby. Model? rassmatrivayet mnogiye aspekty ekzemplyar sluzhby, vklyuchaya
apparatnogo i programmnogo obespecheniya razvertyvaniya do operatsii, neobkhodimyye dlya vypolneniya taym-menedzhmenta. Raz
al?ternativnyye vybran, shablon infrastruktury Design Service initsializiruyet sistemy
Shablon Model? dlya ekzemplyara sluzhby i sokhranyayet yego v modeli Lifecycle Service. 
Shablon sostoit iz slovarya real?nykh kontseptsiy, takikh kak komp?yuternyye sistemy, podseti i
server prilozheniy.
Model? sistemy shablona ukazyvayet diapazony i znacheniya po umolchaniyu dlya vypolneniya takikh parametrov,
kak kolichestvo serverov prilozheniy, ob?yem pamyati dlya kazhdogo servera prilozheniy, a takzhe
chislo rabochikh protsessov v serverakh prilozheniy. Parametry vybrannoy kliyentom, takiye kak
vysokoy dostupnosti i bezopasnosti, takzhe otrazheny v shablonakh, naprimer, pri sboye par i podseti
Arkhitektura.
Vtoroy instrument opredelyayet ekspluatatsionnyye parametry opisannoy vyshe. U nas yest? dva
realizatsiy, kotoryye vypolnyayut etu funktsiyu, illyustriruyushchikh gibkost? nashego podkhoda k
ispol?zovaniya al?ternativnykh instrumentov mnozhestv. Pervaya realizatsiya prosto proveryayet shablon dlya
parametrov i pozvolyayet kliyentu ustanovit? ikh. Zakazchik mozhet ustanovit? parametr
v predelakh ukazannogo diapazona, ili po umolchaniyu mozhet byt? vybran. Vtoraya realizatsiya
Avtomatizirovannaya Performance Engineering (APE) sluzhby. Ona ekspluatiruyet trebovaniy i
prognosticheskikh modeley proizvoditel?nosti avtomaticheski ukazat? sootvetstvuyushchiy parametr proizvoditel?nosti
znacheniya.
Tretiy instrument obsluzhivaniya shablona. On prinimayet v kachestve vkhodnykh dannykh sistema shablonov
Model? i sootvetstvuyushchiye parametry proizvoditel?nosti. On vyvodit model? sistemy, kotoraya stanovitsya chast?yu
Tipovoy Lifecycle Service. Sistema Model? predstavlyayet soboy zakonchennyy dizayn dlya ekzemplyara sluzhby
Ozhidayetsya, chto dlya udovletvoreniya nefunktsional?nykh trebovaniy. Posle togo kak sistema Model? sozdana,
Obsluzhivaniye zhiznennogo tsikla modeli yavlyayetsya vozmozhnost? perekhoda v svyazannoye sostoyaniye.
F. svyazannogo
Svyazannom sostoyanii utochnyayet zazemlennoy gosudarstva s privyazkoy k resursam, naprimer, khostami, khraneniya,
i setevyye iz obshchego pula resursov virtualizirovannykh. Obsluzhivaniye Polucheniye resursa vzaimodeystvuyet
s upravleniya resursami Pool Service ot postavshchika infrastruktury dlya priobreteniya resursov
Bronirovaniye po sisteme Model? ekzemplyara sluzhby.
V svyazannom sostoyanii ekzemplyar sluzhby mozhet imet? pobochnyye effekty na drugikh ekzemplyarov sluzhby. Eto mozhet
yest? zamki na resursy, kotoryye prepyatstvuyut ikh ispol?zovaniyu drugimi, i eto mozhet poborot?sya za
7
dostup k obshchim resursam. Posle togo kak vse resursy byli priobreteny, modeli obsluzhivaniya zhiznennyy tsikl
vozmozhnost? perekhoda k razvernutoy gosudarstvom.
G. Razvernutyye
Razvernutom sostoyanii utochnyayet svyazannom sostoyanii s informatsiyey o razvernuta i rabotayet
Komponenty, kotoryye sostavlyayut ekzemplyar sluzhby. Eto vklyuchayet v sebya svedeniya o privyazke k upravleniyu
i monitoringu uslug v rabotayushchey sisteme. Resurs razvertyvaniya sluzhby nastraivayet i
nachinayetsya resursov. Sluzhba razvertyvaniya programmnogo obespecheniya ustanavlivayet komponenty programmnogo obespecheniya, ukazannogo v
Model? sistemy i zapuskayet ekzemplyar sluzhby, tak chto im mozhno upravlyat?. Model? sistemy
vklyuchayet v sebya dostatochnuyu informatsiyu, chtoby ubedit?sya, chto komponenty budut razvernuty i nachali v pravil?nom
poryadka. Nastroyka programmnogo obespecheniya Obsluzhivaniye gruzov konfiguratsii sluzhby dannykh poluchennykh raneye
ot kliyentov, takikh kak produkt zapisey, kotoryye budut dobavleny v bazu dannykh. I, nakonets, ekzemplyar sluzhby
stanovitsya dostupnoy dlya pol?zovateley.
Na risunke 2 pokazana model? obsluzhivaniya zhiznennogo tsikla i yego sub-modeley. Eto pokazyvayet, preobrazovaniye
ot shablona dizayna modeli infrastruktury do modeli sistemy. Konfiguratsiya
Znacheniya parametrov, predostavlennykh zakazchikom i postavshchikom programmnogo obespecheniya cherez funktsional?nyye i nefunktsional?nyye
Trebovaniya, napravlyat? kak model?naya sistema shablonov okazyvayet infrastruktury
Shablon sluzhby. APE mozhet byt? ispol?zovan pri vybore optimal?nykh znacheniy parametrov proizvoditel?nosti dlya
Model? sistemy shablonov. Obsluzhivaniye ekzemplyara shablona sozdayetsya sistema modeli s ispol?zovaniyem
Model? sistemy shablonov i znacheniy parametrov proizvoditel?nosti. Sistema Model? ispol?zuyetsya dlya
napravit? posleduyushchego priobreteniya operatsiyu resursov, razvertyvaniya i vypolneniya dlya sluzhby
ekzemplyar. Operatsii Dizayn shablona v shablon dizayna modeli infrastruktury rasprostranyat?sya
cherez model? sistemy shablonov dlya modeli sistemy.
Obsluzhivaniye zhiznennogo tsikla modeli
Infrastruktura
Dizayn shablona
Model?
Sistema shablonov
Model? Model? sistemy
Infrastruktura shablona
Design Service
Shablon
Instantsirovaniye
Obsluzhivaniye
Avtomatizirovannaya Performance
Mashinostroyeniye
Mnogiye
konfiguratsiya
al?ternativy
dostupnyy
Proizvoditel?nost?
parametr
velichiny
neizvestnyy
Polnyy dizayn
Gosudarstvennaya informatsionnaya
Chast?
Ssylka Chast? Chast?
Reshite parametr
velichiny
Vybirat?
al?ternativa
Risunok 2: Service Lifecycle modeley i uslug
8
H. Spravochnaya modeley i preobrazovaniy
My shiroko ispol?zovat? dopolnitel?nyy modeley dlya rukovodstva model? prevrashcheniy i perekhodov
Obsluzhivaniye mezhdu zhiznennym tsiklom modeli gosudarstva. Takiye modeli, spetsifichnyye dlya konkretnogo instrumenta i
podkhodov k resheniyu nefunktsional?nyye trebovaniya i ne yavlyayutsya chast?yu sluzhby zhiznennym tsiklom
Model?. Model? zhiznennogo tsikla obsluzhivaniya vklyuchayet v sebya tol?ko ssylki na dopolnitel?nuyu modeley. Sektsii
IV.B, IV.E, i IV.F ob?yasnit?, kak dopolnitel?noye modeli podderzhivayut Proyektirovaniye infrastruktury
Shablon sluzhby, sluzhby bezopasnosti i avtomatizirovannogo obsluzhivaniya inzhenernoy deyatel?nosti,
sootvetstvenno.
Mnogiye iz nashikh instrumentov trebuyet ispol?zovaniya geterogennykh modeley dlya realizatsii modeli
preobrazovaniyakh. Razdel IV.A opisyvayet nashu rabotu po imeni ramkakh ModelWeaver, chto
podderzhivayet sozdaniye takikh instrumentov.
I. sluzhba upravleniya zhiznennym tsiklom
Nash podkhod obespechivayet upravleniye zhiznennym tsiklom dlya obsluzhivaniya ekzemplyarov. Eto vklyuchayet v sebya uslugi dizayna,
sozdaniye, vo vremya upravleniya i upravleniya izmeneniyami. Risunok 4 illyustriruyet eti chetyre aspekta
Sluzhba upravleniya zhiznennym tsiklom i ikh otnosheniye k zhiznennym tsiklom obsluzhivaniya modeli gosudarstva.
Model? zhiznennogo tsikla obsluzhivaniya mozhet nakhodit?sya tol?ko v odnom sostoyanii odnovremenno. Instrumenty perekhoda obsluzhivaniya
Zhiznennyy tsikl modeli ot obshchego sostoyaniya do razvernutogo sostoyaniya. Vernut?sya otslezhivaniye razresheno
tak chto mozhno izuchit? vliyaniye izmeneniy konfiguratsii sluzhby i nefunktsional?nyye
Trebovaniya po poluchennoy konstruktsii dlya ekzemplyara sluzhby.
Sistema Model? vklyuchayet v sebya opisaniye operatsiy, kotoryye mogut byt? vypolneny na sluzhbu
naprimer, dlya vypolneniya upravleniya. Oni sootvetstvuyut operatsiyam na obsluzhivaniye, naprimer, kogda
svoyey sluzhby zhiznennym tsiklom Model? nakhoditsya v svyazannoy ili razvernutom sostoyanii. Svyazannyye podderzhki operatsiy
Priobreteniye resursov, arkhivirovaniya ekzemplyar sluzhby dlya posleduyushchego ispol?zovaniya, i klonirovaniye sluzhby
ekzemplyar. Razvernutyye podderzhki operatsiy nastroyki i ekspluatatsii uslug, naprimer,
v tom chisle operatsii, chtoby izmenit? kolichestvo resursov. Razvernut? ekzemplyar sluzhby mozhet byt? ostanovlena
obshchiye nesvyazannykh svyazany
pol?zovatel?skiye zazemlennoy razvernuto
Nastroyka i vyberite priobresti Nachat?
Otpustite Ostanovit?
resursy
Rabotat?
Arkhiv, Clone * Izmeneniye trebovaniy
* Primechaniye klonirovannoy kopii yavlyayetsya novym ekzemplyarom sluzhby v svyazannom sostoyanii
Legenda
Sleduyushcheye sostoyaniye
To zhe sostoyanii
Pred. sostoyaniye
Risunok 3: Upravleniye zhiznennym tsiklom dlya ekzemplyara sluzhby
9
i vernulsya v svyazannom sostoyanii. On mozhet byt? zapushchen snova, chtoby vozobnovit? v razvernutom sostoyanii. 
Ekzemplyar sluzhby v svyazannom sostoyanii, mozhet pereyti k zazemlennoy gosudarstva. Pri zhelanii ekzemplyara
vychislitel?noy tekhniki i resursov khraneniya ili mogut byt? vozvrashcheny v pul resursov.
Klonirovaniye ispol?zuyetsya dlya sozdaniya neskol?kikh ekzemplyarov sluzhby dlya razrabotki, testirovaniya ili proizvodstva
ekzemplyarov sluzhby. Eto rabota v svyazannom sostoyanii, chto sozdayet drugoy ekzemplyar sluzhby s
Obsluzhivaniye zhiznennogo tsikla modeli v svyazannom sostoyanii. Klon mozhet byt? zapushchen i rabotat? parallel?no s
Original?nyy ekzemplyar. Klon poluchayet polnuyu kopiyu sistemy Zhiznennyy tsikl ekzemplyara sluzhby
Modeli do informatsiyu dlya zazemlennoy gosudarstva. Razlichnyye sluchai resursov priobretayutsya na
obespechit? izolirovannoy sistemy v svyazannom sostoyanii.
Model? preobrazovaniya i operatsii vse realizuyetsya s pomoshch?yu obshchego zaprosa na izmeneniye
(CR) mekhanizm. Mekhanizm CR opisano v razdele IV.C.
IV. Issledovatel?skiye temy
V etom razdele opisany temy issledovaniy, kotoryye sposobstvuyut nashey modeli upravlyayemykh uslug metodom
Upravleniye zhiznennym tsiklom.
A. ModelWeaver
ModelWeaver yavlyayetsya nauchno-issledovatel?skim platformu, kotoraya pozvolyayet ispol?zovat? informatsiyu iz raznorodnykh
Modeli dlya sozdaniya instrumentov, kotoryye podderzhivayut nash podkhod. Yest? mnogo sistem modelirovaniya i
standartizatsiya usiliya dlya modeli IT-sistem [34] [35] [36] [37] [38] [39] [40]. Kazhdaya luchshe vsego podkhodit
dlya modelirovaniya konkretnyy aspekt sistemy. Kazhdyy instrument modelirovaniya imeyet vkhodnoy i vykhodnoy formaty
opisyvayetsya yazyk modelirovaniya. ModelWeaver pozvolyayet nam rabotat? so mnogimi vidami modeley i
instrumenty.
My trebuyem kazhduyu model?, chtoby imet? meta-dannykh, kotoryy predostavlyayet informatsiyu o mestopolozhenii
vkhody, vykhody i modeli formata. Minimal?nyy nabor meta-dannyye, poluchennyye ModelWeaver yavlyayetsya
raspolozheniye modeli, naprimer, URL. Dopolnitel?nyye meta-dannyye dlya modeli vklyuchayet lichnost?
Instrumenty, kotoryye mogut predostavit? konkretnyye operatsii na modeli, naprimer, dlya vyzova redaktora modeli.
ModelWeaver ispol?zuyet strategiyu transformatsii modeley, chto kompilyatory ispol?zuyut. Informatsiya
izvlekayetsya i obrabatyvayetsya ot vkhoda modeley v ikh rodnykh formatov vkhodnykh i vvedeny v
normirovannyye promezhutochnyy format, na kotorom preobrazovaniya osushchestvlyayutsya do tselevoy modeli
sintezirovany.
Na risunke 4 pokazana RDF tokenizers [41] ispol?zuyetsya dlya preobrazovaniya informatsionnoy modeli ot modeley
i B v svoyey normirovannoy formatov. ModelWeaver ispol?zuyet RDF troyek kak normirovannyy vremennogo formata.
Troyek khranyatsya v magazin RDF modeli [42]. Sintezator RDF zatem ispol?zuyet sootvetstvuyushchiy
podmnozhestvakh normirovannogo informatsiya ot A i V, chtoby sozdat? vykhodnoy modeli C. sintezatora
analogichnyy generator koda kompilyatora avtora.
Risunok 4: tkachestvo i preobrazovaniye modeley
10
10
Использования и повторного использования нормированных форматов снижает усилия, необходимые для создания новых преобразований.
Этот принцип позволяет избежать квадратичного роста точечных преобразований, требующих О (п) нормализациями
вместо O (n2) попарно преобразования форматов н. Он также разделяет логику преобразования
от входных и выходных форматов и незначительные изменения входных и выходных форматов. Другие подходы
[45] понести квадратичного роста попарно преобразований.
Преимущество использования RDF для нормированного формата является то, что предлагает мощные функции для
осуществление преобразований логики. Функции включают в себя простые примитивы отбора, запрос
языков, таких как SPARQL [43], и правила, и вывод системы, такие как двигатель Jena правил.
Никакой другой основы моделирования обеспечивает такой богатый набор инструментов. Понятный для человека текст в формате RDF
N3 [44] также позволяет определить, осмотр и манипуляции моделями людьми. N3 является
полезно для проверки временной модели при использовании сложных цепочек инструментов для поддержки
преобразование. Другие языки Преобразование модели также доступны [46].
Раздел I описывает поддержку ModelWeaver для настройки службы и ее оркестровки
APE.
В. Инфраструктура шаблона дизайна моделей и службы экземпляра шаблона
Проектирование и управление ИТ-системы для поддержки услуг является сложным, подверженным ошибкам деятельности
, что требует значительных человеческих знаний, времени и средств. Важной задачей является автоматизация
этот процесс, используя лучшие в своем классе стратегий отгоняют от человека экспертов. Проектирование инфраструктуры
Шаблон Модель отражает интегрированный передовой практике шаблоны проектирования для службы. Он подготовлен
людей и учитывает параметры конфигурации и нефункциональные требования.
Инфраструктура модели шаблона дизайна являются дополнительными моделями.
Шаблон инфраструктуры Дизайн модели выполнен из словаря реальных концепций,
таких как компьютерные системы, подсети, или программной услуги. Она включает в себя следующие.
· Структура и конфигурация аппаратной инфраструктуры, таких как компьютер
Системы, дисков, сетевых адаптеров, подсети и брандмауэры.
· Характеристики необходимого оборудования указаны, таких как тип, обработка
мощности и памяти компьютерной системы, пропускная способность сетевого адаптера или размер или
латентности диска.
· Внутренняя структура и конфигурация программного обеспечения служб, работающих на каждом
компьютерные системы, достаточно подробно, чтобы автоматически разворачивать, настраивать и управлять
них, кроме того, развертывание зависимостей между программным обеспечением услуг, таких
что они установлены, настроены, начал, взятых на линии, взятой в автономном режиме, остановился и
удален в правильном порядке.
· Конфигурация системы мониторинга и сигнализации для аппаратного и программного обеспечения
ландшафта.
· Набор операций, представленных в виде запросов на изменения (CR), которые могут быть применены к
расширить или изменить систему.
· Параметры конфигурации и параметров производительности.
Шаблон проектированию инфраструктуры Модель включает в себя встроенную логику, которая соответствует конфигурации
pameters к определенному дизайну. Параметры конфигурации дают нам возможность кодирования связанных
семьям структурных альтернатив в одной модели шаблона дизайна инфраструктуры таким образом
предотвращение взрыва в ряде случаев таких моделей. Без этой способности, системы
11
характеризуется только 7 булевых выбор будет, в худшем случае, требуется 27 (128) различны
Инфраструктура шаблона дизайна моделей, которые должны быть сохранены отдельно. Проектирование инфраструктуры
Шаблон Модели обеспечивают мощное средство для моделирования топологических альтернативы - только модули
создается при необходимости и отношения между модулями правильно настроены.
Инфраструктура модели шаблона дизайна выражены с использованием SmartFrog [17] [18] текстовой
обозначений в качестве языка моделирования данных. Язык предоставляет набор текста, композиция, наследования,
уточнение, условно экземпляров, сокрытие информации, и ограничения, что позволяет нам создавать
компактный, модульный, настраиваемый описания систем.
aCompSystem IF (! ext_centralized)
Затем распространяется MonitoredComputerSystem {
НИС расширяет {NIC расширяет AI_NIC {подсети IF (ext_secure) THEN ELSE dbSubnet asSubnet FI;}}
groundedExecutionServices IF (ext_dual)
Затем распространяется {дБ простирается DatabaseSoftware; CI расширяет ApplicationServerSoftware;}
ELSE расширяет {Ci расширяет ApplicationServerSoftware;}
FI
операций расширяет {updateMemory расширяет UpdateVirtualMachineMemoryCR;}
}
FI
ЦЕНТРАЛИЗОВАННОЕ - Условный экземпляров мониторе компьютера
Система - например требуется, только если не централизованная система
SECURE - Connect NIC к БД или подсети сервера приложений
DUAL - нужны как DB и как программное обеспечение, в противном случае так же, как
Экземпляры этого шаблона компьютерной системе есть возможность запросить изменение в памяти во время выполнения
На рисунке 5 представлены шаблона проектированию инфраструктуры Модель приводится фрагмент из трех булевых
параметры шаблона (ext_centralized, ext_secure, и ext_dual), который иллюстрирует условный
экземпляров мониторинг компьютерной системы. Условная экземпляров компьютера
Система (aCompSystem) управляется переменной ext_centralized. Условные реконфигурации
программного обеспечения, работающего на нем (groundedExecutionServices) управляется переменной (ext_dual),
и сетевые топологии (NIC) управляется переменной ext_secure. Также отметим, что
Шаблон фрагмент определяет набор допустимых КЛ в качестве прототипа операций. Позволило КЛ может
Также зависит от конфигурации альтернатива.
Рассмотрим теперь шаблона инфраструктуры Проектирование услуг и создания экземпляра шаблона
Службы. Они поддерживают создание модели системы шаблонов и модели системы, соответственно.
Шаблон проектированию инфраструктуры обслуживания загружает SmartFrog описании
Инфраструктура шаблона дизайна модели. Для каждого выбора конфигурации значения параметров,
Инфраструктура шаблона дизайна Обслуживание в состоянии оказать соответствующую модель системы шаблонов
В Eclipse Modeling Framework (EMF) Modeling Notation [40].
Рисунок 5: Фрагмент инфраструктуры шаблона дизайна модели показаны ссылки на параметры шаблона,
Условные экземпляра, и операции
12
AI_Disk: DBDisk AI_Disk: CIDisk
AI_GroundedExecutionComponent: Enqueue
AI_GroundedExecutionComponent: обновление
-Диапазон: <unspecified> = 1 .. N
AI_ComputerSystem: BL20/Xen
AI_Disk: OSDisk
AI_GroundedExecutionService: База данных AI_GroundedExecutionService: AppServer
AI_GroundedExecutionComponent: SD DB AI_GroundedExecutionComponent: DialogWorkProcess
-Диапазон: <unspecified> = 2 .. п
AI_ComputerSystem: BL20/Xen
-Диапазон: <unspecified> = 0 .. п
-RangePolicy: <unspecified> = временной функции
AI_ComputerSystem: BL20/Xen
AI_Disk: OSDisk
AI_GroundedExecutionService: AppServer
AI_GroundedExecutionComponent: DialogWorkProcess
-Диапазон: <unspecified> = 2 .. п
AI_Nic: NIC1 AI_Disk: OSDisk
AI_Network: subnet1
AI_Nic: NIC1 AI_Nic: NIC1
AIDeploymentSetting
AIDeploymentSetting AIDeploymentSetting
AIDeploymentSetting AIDeploymentSetting
AIDeploymentSetting
AIDeploymentSetting
AIDeploymentSetting
Переменная диапазона
Исполнение Компоненты
Инфраструктура
Выполнение услуг
Рисунок 6: Система шаблонов модели для децентрализованной системе SAP
На рисунке 6 показан Единый язык моделирования (UML) схема модели системы шаблонов
для децентрализованной системы SAP. Шаблон описывает три типа компьютерной системы -
База данных (слева), выдающийся Application Server, называется центральной инстанции (справа) и
дополнительные серверы приложений называется Диалог экземпляров (средний) - и как они связаны с
подсети. Для каждого типа компьютерной системы, модель определяет тип программного обеспечения, услуг
работающие на нем, называют выполнения услуги, внутреннюю структуру, что услуги, такие как
тип рабочих потоков, называют выполнения компоненты и параметры развертывания для
программного обеспечения, которые ссылаются на инструкции по развертыванию и параметров. Шаблон описывает
минимальное, максимальное и значения по умолчанию для моделируемых объектов, которые могут быть воспроизведены. Диапазоны
эксплуатационных характеристик этих объектов окружены. Любой человек или услуг, таких как
APE должны решить конкретные значения параметров производительности.
Обслуживание экземпляра шаблона превращает модель системы шаблона с определенными значениями
для выполнения параметров в модели системы. Система Модель имеет отдельный объект для
каждой реплицированной экземпляр сущности в то время как модель шаблонов Система имеет только один экземпляр
с диапазоном. Это подтверждает дальнейшее управление для каждой реплицированной экземпляр.
C. Запрос на изменение Framework
Данный раздел описывает нашу работу по изменению Request (CR) структуру, которая позволяет
планирование, представление и исполнение КЛ. КЛ может привести обновления моделей и времени выполнения и
управление изменениями для обслуживания экземпляров.
Изменение запросов носят декларативный характер, они заявляют, что должно быть сделано, но оставить в стороне
Подробнее о том, как изменения должны быть выполнены. CR государства включает в себя следующие.
· RequestID, который идентифицирует задачу выполнить, например, создание, клонирование, миграцию, и остановиться.
· RequestVersion определяет реализацию версия.
· Контексте описываются моделью лица, в отношении которой изменение предъявления требования.
Контекст может быть всей модели или отдельных лиц в рамках модели, такие как
элементы, соответствующие компоненты программного обеспечения или инфраструктуры узлов.
13
· Параметры: примитивные типы или ссылки на любой модели лица.
· Предварительные условия и пост-условия: логические условия, которые должны быть выполнены до / после
выполнение CR наряду с осуществлением, который оценивает условия.
· Подзадачи: содержит дополнительные уточнения запроса на изменения в шагах тонкие зерна
, которые также являются КЛ. Шаги могут выполняться последовательно или параллельно, как это определено
заказа поля.
· Зависимостей: дополнительный набор ссылок на внешние КЛ, которая должна завершиться до
запрос на изменение может быть обработан.
Жизненный цикл CR описывается следующим образом. Представления инструмент создает CR и связывает его с
Модель лицом он будет работать дальше. Во-первых, статическая проверка происходит. Так как модель лица
содержит только набор условных реакций позволяет, обоснованность просьбы могут быть проверены до
представления. Предполагая, что CR действительно, его текущее состояние сохраняется в модели, и передается
Orchestrator CR, который инициирует обработку.
Orchestrator является основной серверной службы, которая координирует инструментов и вызывает выполнение
КЛ. Инструменты зарегистрироваться Orchestrator, чтобы указать запрос и типы моделей лица они могут
поддерживает. Например, виртуальный инструмент управления машиной регистрирует, что он поддерживает миграцию КЛ
на модели субъектов тип виртуальной машины. Учитывая просьбу выполнить, Orchestrator смотрит на свои
ID запроса и модель лица, в отношении которого подается запрос и находит соответствующие
обслуживание. Каждый инструмент имеет уникальный идентификатор: URL. Если предположить, что инструмент находится и как только соответствующий
будет сделано, Orchestrator сохраняется инструмент идентификатор в CR для того, чтобы следить за
исполнителя.
Orchestrator вызывает инструмент и второй раунд динамического контроля происходит там, где
сам инструмент оценивает КР предварительных условий. Например, запрос на увеличение памяти
на виртуальной машине, будут отклонены, если указанная сумма превышает свободные мощности
физическом хосте. Предполагая, что КР предварительные условия все подтверждено, инструмент продолжает выполнять свои
тонкие шаги переработки зерна. Как только шаги тонкие зерна завершить инструмент входит доработка
обработка фазу, где пост-условия оцениваются и текущее состояние сохраняется в модели.
Захваты государственных информационных изменить историю для экземпляра службы и может быть использован для поддержки заряда
резервные механизмы.
Тонкая зерна шаги для CR представлена ??в виде ориентированного графа КЛ, где дети
узла являются подзадачи, т. е. уточнения, корня CR. Граф кодирует, как подзадачи
упорядочены, и их зависимостей. Если запросы обрабатываются в последовательности или в параллели
определяется заказом атрибут. В качестве примера того, как они используются, в случае SAP,
Установка базы данных и сервер приложений может осуществляться параллельно. Однако, строго
заказ должен убедиться, что база данных запущена до того, как сервер приложений.
Выполнение CR помощью инструмента происходит асинхронно по отношению к оркестровке
окружающей среды. Каждый инструмент отвечает за обновление и сохранение прогресса за время выполнения состоянии
запроса в модели, а в случае неудачи, для возможности отката его изменения или
инициировать взаимодействие с человеком-оператором.
Рамках запроса на изменение совместимо с полностью автоматизированным и частично автоматизированных
управления. Хотя мы предполагаем, что большинство задач будет решаться в автоматическом режиме,
некоторые задачи могут потребовать вмешательства человека. Операция прототипов КЛ позволит динамического
создание человеческого читаемым формы для КЛ, которые позволяют людям завершить КЛ при необходимости.
В настоящее время мы считаем, что CR планирования предписывающий характер. КЛ руки созданного человеком как часть
развития шаблонов проектирования модели инфраструктуры. В частности, для реализации каждого
14
CR они определяют последовательность инструменты, которые будут работать и параметры, которые передаются в каждом
инструмент. В будущем, мы будем использовать информацию о пред-и пост-условий, позволяющих описательный
CR подзадачи планирования. Такие технологии, как проверки моделей [47] может быть использована для рассуждать о
CR и автоматически разработать план CR, который использует другие КЛ как подзадачи для ее осуществления.
Наконец, подход имеет много общего с системой CHAMPS [55]. CHAMPS дело с
планирование и выполнение КЛ представленные человека администраторов. В контексте нашего
работы, КЛ, скорее всего, представленный автоматизированных средств.
D. Государственная переходы для экземпляров служб
В нашем подходе, переходы состояний для обслуживания моделей жизненного цикла являются моделями и выполнены
на КЛ. Модель жизненного цикла обслуживания в состоянии перехода от одного состояния к другому, когда сообщение
Условия и предварительного условия выполнены, соответственно. Личность КЛ и
оперативные параметры, используемые для выполнения государственных преобразований сами хранятся в
Обслуживание жизненного цикла модели, и зависит от типа услуги и выбор клиента конфигурацию.
Модель Lifecycle Service (MLS) осуществляет управление жизненным циклом для обслуживания жизненного цикла
Модель. MLS опирается на переходную модель государства (MST) структура данных, которая хранится в
Обслуживание жизненного цикла модели. Он кодирует состояний модели, допустимые переходы между
состояния, а последовательность КЛ необходимо для каждого перехода вместе с параметрами, чтобы быть
применяется к CR.
MLS реализует КЛ вид ChangeModelStateTo: desiredState, переход
Обслуживание модель жизненного цикла его желаемого состояния. Когда CR выдается MLS, это вызывает
требуются промежуточные переходы состояний и действий, превращая информацию в MST, чтобы
действительный последовательность ребенка КЛ. Схема приведена на рисунке 7. В этом примере используется MLS
MST, чтобы определить, что для перемещения модели из состояния 1 в состояние 3 требует следующей последовательности
КЛ: A, B, C, D, и E.
Состояние
1
Состояние
2
Состояние
3
Переходы модели государство
А Б В Г Д Е
H I F G
CR вызова последовательности
для стран с переходной
Модель Lifecycle Service
1. CR изменить
государство "Состояние 3"
2. MLS использует MST планировать промежуточную
состояния и необходимых КЛ
Запрос на изменение двигателя
3. MLS представляет КЛ выполнять план
'D' A 'B' C E '
Менять
Состояние
Рисунок 7: Использование MST по номеру определить, КЛ для перехода от модели государства
Модель управляемой характер жизненного цикла услуг является очень мощным. Последовательность позволило состоянии
изменения и необходимые КЛ и их параметров для перехода между состояниями, могут быть изменены
во время выполнения с помощью инструментов ссылаться на КЛ. Таким образом, поведение системы может быть изменен в
ответ на информацию, собранную в то время как прогрессирует через жизненного цикла. Например, если обезьяна
требуется, то CR может быть выдана для обновления MST включить КЛ, которые вызывают соответствующие
услуги для выполнения. Таким образом, служба управления жизненным циклом настроена на тип сервиса
15
и конфигурации службы требуется клиенту.
Е. службы безопасности
В этом разделе описывается служба безопасности, которая реализует альтернативную политику управления безопасностью
для обслуживания экземпляров. Подход интегрируется с дополнительными Дизайн инфраструктуры
Шаблон Модели и влияет на оказание Система шаблонов моделей и моделей систем.
Клиенты выбирают из категорических уровней безопасности, которые затем реализуются Службой безопасности
для обслуживания экземпляров.
Служба безопасности опирается на понятие отсеков. Каждый отсек используется для
инкапсуляции и защиты элементов системы, например, аппаратного и / или программного обеспечения в инфраструктуре
Модель шаблона дизайна. Каждый отсек имеет формально моделируется контроля безопасности, которые определяют
особенности защиты, предусмотренные отсек для реализации политик безопасности.
подход к моделированию является продолжением наблюдателя / контроллер (OC) безопасности картины и Scholer
Мюллер-Schloer [48].
Наша реализация моделей OC модель организации и взаимодействия, которые обеспечивают выполнение
отсека для защиты ее элементов системы. Модели называются OC моделей.
Наблюдатели и контроллеры надежная система элементов, называемых элементами управления безопасностью
(SCE), которые обеспечивают одну или несколько функций защиты.
OC модели разработаны эксперт по вопросам безопасности, который определяет классы событий, которые
должны соблюдаться и контролироваться, чтобы обеспечить защиту для конкретного отсека и как они
обеспечивать безопасность для службы в целом. В качестве примера политик безопасности контроль, рассмотрим
Простой пример отсек, который защищает сервер приложений со следующим событием
классы для запросов наблюдается и контролируется.
· ReceiveApplicationRequest: модели трафика приложений, впадающих в отсек.
· ReceiveOperatorRequest: модели оператора трафик, проходящий за пределами отсека
в купе, например, сессии OS входа, используемое для администрирования системы.
· SendMonitoringRequest: модели мониторинга трафика, проходящего внутри отсека
к системе мониторинга за пределами отделения, такие, как SNMP ловушки.
Эксперт по вопросам безопасности может создать модели для нескольких контроллеров для управления
receiveApplicationRequest класса событий. Эти модели управления используются для выбора и настройки
механизмы безопасности, такие, что контроль будет обеспечиваться путем инфраструктуры отсека на
время выполнения. Хотя созданные вручную, множество моделей управления повторно используются во многих обслуживания
Жизненный цикл модели экземпляров и многие модели проектирования инфраструктуры шаблона.
Рисунок 8: Справочная моделей
общие несвязанных связаны
пользовательские заземленной развернуто
Проектирование инфраструктуры
Шаблон модели
Benchmark инфраструктуры
Альтернативная модель
Программная платформа
модель
Программная платформа
тесте модель
Бизнес-процесс
Модель управления потоками
Безопасность
модель
16
Рассмотрим следующий пример, который показывает, аутентификации пользователей и фильтрации сети управления
для запросов. Во время выполнения, следующее условие должно определять истинные, с тем чтобы
receiveApplicationRequest и тем самым разрешить пользователю доступ к возможностям сервера приложений:
((IsMemberOfSet (пользователь, stronglyAuthenticatedUsersSet))
И (протокол == "TCP")
И ((DestinationPort == "80") OR (DestinationPort == "443"))
И (isMemberOfSet (DestinationIP, applicationServerIPAddressSet)))
Все условия, необходимые для определения правильной меры следует принять в ответ на событие класса
конфигурации безопасности альтернативные модели в OC для купе. OC модели являются частью
Модель из дополнительных Безопасности, на который ссылается модели Lifecycle Service. Это
облегчает определение, местонахождения, и программно оценки и проверки комплекта
контроля безопасности для помещений и обслуживания экземпляров. На рисунке 8 показано дополнительное
Модель безопасности.
Эксперт по вопросам безопасности должен работать с конструктором шаблонов проектирования инфраструктуры
Модели для обеспечения любых SCE и топологии альтернатив, необходимых для осуществления контроля безопасности
политика осуществляется в модели системы шаблонов. ПКЭ включать в себя устройства, такие как брандмауэры.
Управление сетевой топологии подсети часто используется решить, будет ли определенный трафик
защищена ПКЭ.
Во время настройки действий, которые происходят при переходе от связанных с развернута
государства, инструмента Службы безопасности вызывается для преобразования полного набора смоделированных безопасности
управления из моделей OC отсек в модели безопасности в конкретных устройств
конфигураций для ПКЭ экземпляра службы. Контроль соблюдения выбранной контроля безопасности
политики. Например, если модель системы указанные IPTables [49] в качестве контроллера механизма
обеспечить необходимую функцию фильтрации сети, и только два сервера приложений в IP-адреса
15.2.3.4 и 15.2.3.5 должны были быть использованы, и eth1 были внешне выглядящий интерфейс имя, а затем
Инструмент конфигурации брандмауэра выполняется для создания файла конфигурации IPTables, что включает в себя четыре
следующие строки, чтобы пакеты классифицируются в классе событий receiveApplicationRequest
в отсек:
IPTABLES-Firewall-я eth1-D 15.2.3.4-р TCP - DPORT 80-J ACCEPT
IPTABLES-Firewall-я eth1-D 15.2.3.5-р TCP - DPORT 80-J ACCEPT
IPTABLES-Firewall-я eth1-D 15.2.3.4-р TCP - DPORT 443-J ACCEPT
IPTABLES-Firewall-я eth1-D 15.2.3.5-р TCP - DPORT 443-J ACCEPT
Эти команды конфигурации соблюдение следующих подусловий во время выполнения:
(Протокол == "TCP")
И ((DestinationPort == "80") OR (DestinationPort == "443"))
И (isMemberOfSet (DestinationIP, applicationServerIPAddressSet))
С учетом указанных выше подхода, IPTables был настроен так, что если условие имеет значение
правда, то пакеты будут разрешены, чтобы достичь сервера приложений. Кроме того, применение
Сервер должен быть настроен на выполнение следующих условий контроля для того, чтобы
Пользователь, указанный в запросе, сильно подлинности:
17
(IsMemberOfSet (пользователь, stronglyAuthenticatedUsersSet)).
Возможность управления через пару несколько типов SCE, в данном случае брандмауэров и приложений
серверы, иллюстрирует преимущество отсек концепции. Он также иллюстрирует эффективность
Инфраструктуры шаблона дизайна моделей на поддержку соответствующих изменений в нескольких лиц
в дизайне для поддержки нефункциональные требования.
Ф. Автоматизированная Performance Engineering обслуживания
Автоматизированная инженерной деятельности (APE) службы [50] имеет две цели. Во-первых, это
решает значения для эксплуатационных параметров, которые необходимы для преобразования системы шаблонов
Модель для модели системы. Во-вторых, она создает тест производительности проверки, которые могут быть выполнены
против развернутых экземпляр службы, чтобы убедиться, что он поддерживает ожидается рабочих нагрузок клиентов.
APE требуется следующее дополнительное модели: Бизнес-процесс управления потоком модели;
Программная платформа модели; Программная платформа Benchmark модели, и, Benchmark
Модель инфраструктуры Alternative. Это, в дополнение к модели шаблона дизайна инфраструктуры,
используются для поддержки APE и показаны на рисунке 8.
Управление бизнес-процессами потока, модель программной платформы и программного обеспечения платформы
Benchmark модели осуществляется программного обеспечения. Benchmark альтернативной инфраструктуры
Модель представляет собой хранилище информации о результатах деятельности.
Управление бизнес-процессами потока Модель описывает ожидаемое пути выполнения клиентами
как визиты через этапы бизнес-процесса. Модель Software Платформа описывает посещение этих
шаги для бизнеса поставщика объектов. Бизнес-объекты представляют собой программные компоненты, такие как
Клиент, порядок и поставщиков объектов, которые имеют значение в предложение поставщика.
Программная платформа Benchmark Модель включает в себя множество поставщиков программного обеспечения ориентиров для обслуживания.
Каждый тест оказывает небольшое количество объектов в порядке, типичные для этой платформы.
тесты обеспечивают охват бизнес-поставщика программного обеспечения объектов.
Benchmark модели альтернативной инфраструктуры выступает в качестве хранилища многоразового производительности
информация для APE. Тесты от эталона модели программной платформы выполняются в отношении
каждая модель системы шаблонов и хранится. Результаты каждого запуска включают измеренных ресурсов
требования.
APE создает индивидуальные характеристики и тест модели, которые соответствуют ожидаемым клиентом
Использование смеси для бизнес-объектов. Объект клиентов бизнес-микс определяется пропускной
Требования для каждого варианта бизнес-процесса, как указано в пользовательском состоянии и визит
информация из управления бизнес-процессами модель течения и модели программной платформы.
Различные бизнес-объектов может привести к значительно отличается использованием ресурсов, и в результате такого
Информация должна быть принята во внимание при прогнозных моделей и ориентиров. Смеси определяет
средний спрос на ресурсы, понесенные экземпляр службы при поддержке запросы пользователей.
APE использует рабочую нагрузку для техники [51], что повторно используется подмножество результатов
Benchmark модели альтернативной инфраструктуры для создания моделей производительности [52], [53], которые решают
оптимальной производительности значения параметров для модели системы шаблонов и создать
Тест производительности проверки. На рисунке 9 показано APE процесса.
18
Шаблон инфраструктуры Design Service можно использовать APE несколько раз, чтобы выбрать наиболее
соответствующего альтернативного дизайна для экземпляра службы с учетом нефункциональных такие вопросы,
как производительность и стоимость. Проверка тест используется для проверки того, что развернутые экземпляр службы
способен поддерживать ожидается нагрузки клиента, удовлетворяя целям времени отклика.
Г. экземпляр службы управления
Предоставление услуг является первым шагом в жизненном цикле сервиса. Высокая стоимость предприятия услуг
часто имеют периодические работы по техническому обслуживанию, которые должны быть выполнены, чтобы обеспечить правильную работу
Экземпляр службы [33] [54]. Например, приложение с базой данных может иметь таблицы базы данных
, что может стать причиной полной и функциональных ошибок для клиента. Если таблица заполнена, то
либо данные должны быть удалены из таблицы или размер таблицы должны увеличиться. Каждый
Инфраструктура шаблона дизайна модели указывает операции, которые выполняются периодически
автоматизировать такие вегетативные задач. Эти операции осуществляются с помощью механизма CR.
H. ресурсов бассейна управление
Инфраструктура и поставщиков программного обеспечения амортизировать управление, инфраструктура, объекты и мощности
Расходы на клиентов они обслуживают. Эффективное и гибкое использование имеющихся вычислительных
ресурсов и власти важно контролировать расходы.
Для поддержки наших исследований мы разработали универсальный и расширяемый Управление ресурсами бассейна
Служба, которая объединяет автономные контроллеры для управления имеющимися ресурсами. Пул ресурсов
Служба управления поддерживает контуров управления, которые регулируют доступ к ресурсам для обслуживания клиентов
случаях через их жизненного цикла. Он отслеживает метрики для обслуживания и инфраструктуры и позволяет
Контроллеры для автоматической настройки сервиса и инфраструктуры конфигураций, когда это необходимо.
Метрики включают безопасности наблюдения, наблюдения доступность услуг и возможностей и
измерения производительности. Контроллеры осуществлять политику, которая руководствуется показателями. Они
может взаимодействовать с экземплярами служб, вызывая операции, предоставляемые системой моделей.
Мы также оценки влияния короткий срок по сравнению с долгосрочной оптимизации ресурсов
Пользовательские состоянии
Информация -
пропускную
Бизнес-процесс
Модель управления потоками
- Посещения
Программная платформа
модель
- Посещения
Программная платформа
тесте модель
Инфраструктура
шаблон дизайна
модель
Benchmark инфраструктуры
Альтернативная модель
APE
Параметры выбранной для
Система шаблонов
Модель
Производительность
Проверка теста
для обслуживания
пример
Результаты тестирования
Шаблон для системы
Модели используются повторно для
многих случаях службы
Рисунок 9: Автоматизированные Process Engineering Performance
19
ассигнований в пул ресурсов и можем ли мы получить путем сочетания этих подходов. Для этого,
Мы изучаем комплексное использование трех различных контроллеров, адрес планирования для
пул ресурсов, миграция виртуальных машин и динамическое распределение физического хоста
ресурсов. Моделирование результаты показали, что комбинация контроллеров достигает лучших результатов
При управлении 138 предприятий услуг, чем контроллеры отдельно [29] [30].
В. текущей реализации
В этом разделе описывается наша текущая реализация услуг по управлению жизненным циклом
рамки для экземпляров служб. Наш подход заключается в том, чтобы разработать рамки итеративно,
проверка наших использование нескольких моделей точку зрения и поддержку конструкция могут быть нефункциональных
требования. Пример описывает конфигурацию и конструкцию системы SAP.
Служба создания начинается с просмотра каталога поддерживаемых услуг. На рисунке 10 показана
ModelWeaver используются для просмотра каталога. ModelWeaver может быть использован для запуска
соответствующий инструмент визуализации службы, когда выбран режим ввода.
Каталог
Рисунок 10: Просмотр каталога услуг с ModelWeaver
После того, как бизнес-процесс выбирается из каталога, модель жизненного цикла обслуживания создана для
Экземпляр службы. Эта модель обслуживания жизненного цикла в общем состоянии, как показано на рисунке 1.
Далее, инструмент представлен к клиенту для настройки экземпляра службы. Простой флажок
Пользовательский интерфейс используется для сбора клиентов нефункциональные требования, касающиеся наличия,
безопасность и масштабируемость. Эксплуатационные требования будут захвачены, связав каждой выбранной
Бизнес-процесс вариант с пропускной требования, например, количество пополнений в час
Целью время отклика для интерактивных времени отклика. После того как все начальные требования к конфигурации
захватываются с клиентами, служба переходы модель жизненного цикла обычаю государства.
Модель жизненного цикла обслуживания, который затем заполняется с поставщиком программного обеспечения информацией о
Требования к программным компонентам, таких как серверы приложений. Эти компоненты могут ограничить
потенциальных проектов. После завершения службы жизненным циклом модели переходов в свободном состоянии.
20
Рисунок 11: Просмотр шаблона проектированию инфраструктуры Рисунок 12: APE Выбор параметров производительности
На рисунке 11 показана шаблона проектированию инфраструктуры Модель просматриваемого помощью
Проектирование инфраструктуры шаблона службы. Шаблон инфраструктуры Design Service использует эту
моделирования для визуализации модели системы шаблонов. В верхней левой руке область окна отображается
параметры, которые были выбраны для этого шаблона, в то время как взгляд на право оказанных
Модель системы шаблонов.
APE используется для вычисления значений параметров производительности. Входы для APE получены
из пользовательского состояния модели жизненного цикла обслуживания и дополнительных моделей. На рисунке 12 показана
таблицами производства APE, в котором параметры производительности все вычислить.
Модель преобразования для APE и перевозки расчетные значения параметров в Службу
Жизненный цикл модели реализованы с использованием ModelWeaver. Эксплуатационные параметры затем используются
Службой экземпляра шаблона для преобразования модели системы шаблонов в системе
Модель. После службы жизненным циклом модели перехода к заземленной государства. После приобретения
ресурсов от службы управления пул ресурсов, Служба переходы модель жизненного цикла
в связанном состоянии.
Рисунок 14: развернутом состоянии
Поддержанный
Менять
Запросы
Представленный
Менять
Запросы
Экземпляр диапазоне
используются и установленные APE
Связывание с физического хоста
Рабочий процесс
И тема
информация
Рисунок 13: связанное состояние
21
Рисунок 13 использует модель браузера, чтобы проиллюстрировать информации в связанном состоянии. Это показывает, что
Например диапазоне значений были установлены и что три условные рефлексы могут быть применены к примеру диалог
компьютерные системы. Они помечены как запрос на изменение (RFC) и для живой миграции,
изменение размера памяти, и удаления ненужных серверов приложений. На рисунке также показаны
привязки к хосту, приобретенные у Management Service пул ресурсов.
Наконец, на рисунке 14 показана экземпляр службы с ее жизненным циклом обслуживания модели в развернутом
состоянии. Инфраструктура поле на левом поле показывает, интеграции с системами управления услугами. CR
Операции показаны на коробках в правом поле.
Наши нынешние переходы реализации сервисной модели жизненного цикла от общего состояния
до развернутого состояния. Она предполагает клиентами являются только знать о своих нефункциональных
Требования и автоматически выбирает проектирование инфраструктуры на основе этих требований.
Дизайн затем перешли в он-лайн система для нагрузочного тестирования или использования пользователями.
VI. РЕЗЮМЕ И ВЫВОДЫ
Мы описали модель-ориентированный подход для упаковки высокого корпоративного программного обеспечения значения
использовать в качестве сервиса, для управления жизненным циклом сервисов обслуживания случаях, и для взаимодействия с
общие виртуальные пулы ресурсов. Структура нацелена на хостинг очень большого числа
экземпляры служб, которые могут работать в пулы ресурсов поддерживается парадигме облачных вычислений.
Он поддерживает настройку экземпляров службы по клиентам, которые не имеют инфраструктуры
Дизайн навыков. Наконец, он обращается нефункциональные такие вопросы, как доступность, безопасность и
производительности, которые имеют важное значение для высокого значения настраиваемых экземпляров службы.
Мы продемонстрировали возможность сбора информации, необходимой для моделей у нас есть
работу. Прототип инструменты, которые мы разработали показали, что модель-ориентированный подход может
быть полезным для упаковки программное обеспечение как услуга и для автоматизации важнейших аспектов обслуживания
инициализации и управления. Подход, который мы представляем очень гибкая. Конфигурация
Экземпляр службы определяет средства, используемые для поддержки своих услуг по управлению жизненным циклом.
Справочная служба моделей захватить определенную информацию. В результате, мы считаем, что подход
может быть применен к различным видам услуг. Модель информацию повторно использоваться и совместно
различных инструментов, которые поддерживают управление жизненным циклом. Средства используются в комбинации для создания
мощные преобразования модели и состояния переходов. Эти преимущества управляемой моделями
подход для поставщиков программного обеспечения, которые направлены на поддержку большого количества экземпляров службы.
Наша текущая реализация рамках сосредоточена на поддержке приложений SAP.
Мы предпочитаем работать с приложениями SAP из-за их высокой стоимости, а также из-за
сложных проблем, которую они представляют.
